import pytest
from dynamo import Word, itemToWord


def test_init():
    """Test the Word constructor

    An example Word object has these attributes:
    - image_id: 1
    - line_id: 1
    - id: 1
    - text: "06\/27\/2024"
    - x: 0.1495695452950324
    - y: 0.8868912353567051
    - width: 0.08727867372574347
    - height: 0.024234482472679675
    - angle: 7.7517295
    - confidence: 1

    """
    # image_id
    with pytest.raises(ValueError):
        Word(
            -1,
            1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1,
        )
        Word(
            0.1,
            1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1,
        )
    # line_id
    with pytest.raises(ValueError):
        Word(
            1,
            -1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1,
        )
        Word(
            1,
            0.1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1,
        )
    # id
    with pytest.raises(ValueError):
        Word(
            1,
            1,
            -1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1,
        )
        Word(
            1,
            1,
            0.1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1,
        )
    # text
    with pytest.raises(ValueError):
        Word(
            1,
            1,
            1,
            None,
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1,
        )
    # x
    with pytest.raises(ValueError):
        Word(
            1,
            1,
            1,
            "06\/27\/2024",
            -0.1,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1,
        )
        Word(
            1,
            1,
            1,
            "06\/27\/2024",
            1,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1,
        )
    # y
    with pytest.raises(ValueError):
        Word(
            1,
            1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            -0.1,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1,
        )
        Word(
            1,
            1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            1,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1,
        )
    # width
    with pytest.raises(ValueError):
        Word(
            1,
            1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            -0.1,
            0.024234482472679675,
            7.7517295,
            1,
        )
        Word(
            1,
            1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            1,
            0.024234482472679675,
            7.7517295,
            1,
        )
    # height
    with pytest.raises(ValueError):
        Word(
            1,
            1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            -0.1,
            7.7517295,
            1,
        )
        Word(
            1,
            1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            1,
            7.7517295,
            1,
        )
    # angle
    with pytest.raises(ValueError):
        Word(
            1,
            1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            "Not an int nor a float",
            1,
        )
    # confidence
    with pytest.raises(ValueError):
        Word(
            1,
            1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            -0.1,
        )
        Word(
            1,
            1,
            1,
            "06\/27\/2024",
            0.1495695452950324,
            0.8868912353567051,
            0.08727867372574347,
            0.024234482472679675,
            7.7517295,
            1.1,
        )
    word = Word(
        1,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    assert int(word.image_id) == 1, "image_id should be 1"
    assert int(word.line_id) == 1, "line_id should be 1"
    assert int(word.id) == 1, "id should be 1"
    assert word.text == "06\/27\/2024", "text should be '06\/27\/2024'"
    assert float(word.x) == 0.1495695452950324, "x should be 0.1495695452950324"
    assert float(word.y) == 0.8868912353567051, "y should be 0.8868912353567051"
    assert (
        float(word.width) == 0.08727867372574347
    ), "width should be 0.08727867372574347"
    assert (
        float(word.height) == 0.024234482472679675
    ), "height should be 0.024234482472679675"
    assert float(word.angle) == 7.7517295, "angle should be 7.7517295"
    assert float(word.confidence) == 1, "confidence should be 1.0"


def test_key():
    """Test the Word key method"""
    word = Word(
        1,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    key = word.key()
    assert key == {
        "PK": {"S": "IMAGE#00001"},
        "SK": {"S": "LINE#00001#WORD#00001"},
    }, "The key should be {'PK': 'IMAGE#00001', 'SK': 'LINE#00001#WORD#00001'}"


def test_to_item():
    """Test the Word to_item method"""
    word = Word(
        1,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    item = word.to_item()
    assert item == {
        "PK": {"S": "IMAGE#00001"},
        "SK": {"S": "LINE#00001#WORD#00001"},
        "Type": {"S": "WORD"},
        "Text": {"S": "06\/27\/2024"},
        "X": {"N": "0.14956954529503240000"},
        "Y": {"N": "0.88689123535670510000"},
        "Width": {"N": "0.08727867372574347000"},
        "Height": {"N": "0.02423448247267967500"},
        "Angle": {"N": "7.7517295000"},
        "Confidence": {"N": "1.00"},
    }, "The item should be {'PK': 'IMAGE#00001', 'SK': 'LINE#00001#WORD#00001', 'text': '06\/27\/2024', 'x': 0.1495695452950324, 'y': 0.8868912353567051, 'width': 0.08727867372574347, 'height': 0.024234482472679675, 'angle': 7.7517295, 'confidence': 1.0}"


def test_repr():
    """Test the Word __repr__ method"""
    word = Word(
        1,
        1,
        2,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    assert repr(word) == "Word(id=2, text='06\\/27\\/2024')"


def test_iter():
    """Test the Word __iter__ method"""
    word = Word(
        1,
        1,
        2,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    assert dict(word) == {
        "PK": "IMAGE#00001",
        "SK": "LINE#00001#WORD#00002",
        "text": "06\/27\/2024",
        "x": "0.14956954529503240000",
        "y": "0.88689123535670510000",
        "width": "0.08727867372574347000",
        "height": "0.02423448247267967500",
        "angle": "7.7517295000",
        "confidence": "1.00",
    }, "The items should be {'PK': 'IMAGE#00001', 'SK': 'LINE#00001#WORD#00002', 'text': '06\/27\/2024', 'x': 0.1495695452950324, 'y': 0.8868912353567051, 'width': 0.08727867372574347, 'height': 0.024234482472679675, 'angle': 7.7517295, 'confidence': 1.0}"


def test_eq():
    """Test the Word __eq__ method"""
    word1 = Word(
        1,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    word2 = Word(
        1,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    assert (
        word1 == word2
    ), "The equal operator works with the same image_id, line_id, id, text, x, y, width, height, angle, confidence"

    word3 = Word(
        2,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    assert word1 != word3, "The equal operator works with different image_id"

    word4 = Word(
        1,
        2,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    assert word1 != word4, "The equal operator works with different line_id"

    word5 = Word(
        1,
        1,
        2,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    assert word1 != word5, "The equal operator works with different id"

    word6 = Word(
        1,
        1,
        1,
        "06\/27\/2025",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    assert word1 != word6, "The equal operator works with different text"

    word7 = Word(
        1,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950323,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    assert word1 != word7, "The equal operator works with different x"

    word8 = Word(
        1,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567052,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    )
    assert word1 != word8, "The equal operator works with different y"

    word9 = Word(
        1,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574350,
        0.024234482472679675,
        7.7517295,
        1,
    )
    assert word1 != word9, "The equal operator works with different width"

    word10 = Word(
        1,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679677,
        7.7517295,
        1,
    )
    assert word1 != word10, "The equal operator works with different height"

    word11 = Word(
        1,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517294,
        1,
    )
    assert word1 != word11, "The equal operator works with different angle"

    word12 = Word(
        1,
        1,
        1,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        0.99,
    )
    assert word1 != word12, "The equal operator works with different confidence"


def test_itemToWord():
    """Test the itemToWord function"""
    item = {
        "PK": {"S": "IMAGE#00001"},
        "SK": {"S": "LINE#00002#WORD#00003"},
        "Type": {"S": "WORD"},
        "Text": {"S": "06\/27\/2024"},
        "X": {"N": "0.14956954529503240000"},
        "Y": {"N": "0.88689123535670510000"},
        "Width": {"N": "0.08727867372574347000"},
        "Height": {"N": "0.02423448247267967500"},
        "Angle": {"N": "7.7517295000"},
        "Confidence": {"N": "1.00"},
    }
    word = itemToWord(item)
    assert word == Word(
        1,
        2,
        3,
        "06\/27\/2024",
        0.1495695452950324,
        0.8868912353567051,
        0.08727867372574347,
        0.024234482472679675,
        7.7517295,
        1,
    ), "The Word object should be Word(1, 1, 1, '06\/27\/2024', 0.1495695452950324, 0.8868912353567051, 0.08727867372574347, 0.024234482472679675, 7.7517295, 1)"
