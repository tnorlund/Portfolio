[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "receipt_trainer"
version = "0.1.0"
authors = [
  { name="Tyler Norlund", email="tnorlund@icloud.com" },
]
description = "A package for training LayoutLM models on receipt data"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    # Core dependencies
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "datasets>=2.12.0",
    
    # Data processing and ML
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "boto3>=1.26.0",
    
    # CLI tools
    "tabulate>=0.9.0",
    "pyyaml>=6.0.0",
    
    # Visualization
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    
    # AWS Infrastructure
    "pulumi>=3.0.0",
    "pulumi-aws>=6.0.0",
    
    # Checkpoint management
    "filelock>=3.8.0",

    "pydantic>=2.10.6",
]

[project.scripts]
receipt-cli = "receipt_trainer.jobs.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "pylint>=3.0.0,<4.0.0",
    "flake8>=6.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=receipt_trainer"
markers = [
    "unit: mark test as a unit test",
    "integration: mark test as an integration test",
    "end_to_end: marks tests that test the full system (may be slower)",
    "real_aws: marks tests that interact with real AWS resources (and incur costs)",
]

[tool.coverage.run]
source = ["receipt_trainer"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "raise ImportError",
]

[tool.black]
line-length = 79
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79

[tool.pylint.format]
max-line-length = 79

[tool.pylint.messages_control]
disable = [
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals", 
    "too-many-instance-attributes",
    "too-many-branches",
    "line-too-long",  # Let black handle this
    "missing-module-docstring",
    "missing-class-docstring", 
    "missing-function-docstring",
]

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "pk", "sk"]

[tool.pylint.design]
max-args = 10
max-locals = 20 