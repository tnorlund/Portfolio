name: Claude Code Review (Optimized)
on:
  pull_request:
    types: [ready_for_review, labeled]
    paths:
      # Only review code files
      - '**.py'
      - '**.ts'
      - '**.tsx'
      - '**.js'
      - '**.jsx'
      # Explicitly exclude non-code files
      - '!**.md'
      - '!**.json'
      - '!**.yaml'
      - '!**.yml'
      - '!**.txt'
      - '!**.toml'
      - '!**.lock'
      - '!**.log'

jobs:
  check-review-needed:
    name: Check if review needed
    runs-on: ubuntu-latest
    outputs:
      should_review: ${{ steps.check.outputs.should_review }}
      pr_size: ${{ steps.check.outputs.pr_size }}
    steps:
      - name: Check review conditions
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            
            // Skip if draft
            if (pr.draft) {
              console.log('Skipping: PR is draft');
              core.setOutput('should_review', 'false');
              return;
            }
            
            // Skip if has skip label
            const labels = pr.labels.map(l => l.name);
            if (labels.includes('skip-claude-review')) {
              console.log('Skipping: has skip-claude-review label');
              core.setOutput('should_review', 'false');
              return;
            }
            
            // Check if explicitly requested
            const hasRequestLabel = labels.includes('claude-review-requested');
            
            // Calculate PR size
            const additions = pr.additions || 0;
            const deletions = pr.deletions || 0;
            const total = additions + deletions;
            core.setOutput('pr_size', total);
            
            // Skip large PRs unless explicitly requested
            if (total > 1000 && !hasRequestLabel) {
              console.log(`Skipping: PR too large (${total} lines) without explicit request`);
              core.setOutput('should_review', 'false');
              return;
            }
            
            // Review if:
            // 1. Explicitly requested via label
            // 2. Ready for review and under size limit
            const shouldReview = hasRequestLabel || 
                                (pr.state === 'open' && !pr.draft && total <= 1000);
            
            console.log(`Review decision: ${shouldReview} (size: ${total} lines)`);
            core.setOutput('should_review', shouldReview.toString());

  claude-review:
    name: Claude Code Review
    needs: check-review-needed
    if: needs.check-review-needed.outputs.should_review == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper diff

      - name: Add size context
        uses: actions/github-script@v7
        with:
          script: |
            const size = ${{ needs.check-review-needed.outputs.pr_size }};
            if (size > 500) {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: `⚠️ This PR contains ${size} lines of changes. Claude's review may be less thorough for large PRs.`
              });
            }

      - name: Claude review
        uses: anthropics/claude-code-action@beta
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}
          allow-python-tool-execution: true
          language-model-instructions: |
            You are reviewing a pull request. Be concise and focus on:
            1. Critical bugs or security issues
            2. Performance problems
            3. Missing error handling
            4. Code that doesn't follow project patterns
            
            Skip commenting on:
            - Minor style issues (these are handled by formatters)
            - Missing docstrings (unless critical)
            - Variable naming (unless very unclear)
            
            For large PRs (>500 lines), focus only on critical issues.
            
            Start your review with a brief summary (2-3 sentences max).
          # Only review changed files
          review-strategy: "files-changed"

  manual-review-trigger:
    name: Handle manual review request
    if: |
      github.event_name == 'issue_comment' && 
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/claude review')
    runs-on: ubuntu-latest
    steps:
      - name: Add review label
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              ...context.repo,
              issue_number: context.issue.number,
              labels: ['claude-review-requested']
            });
            
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: '🤖 Claude review requested. The review will start shortly.'
            });