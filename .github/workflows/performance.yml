name: Performance Testing

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: portfolio/package-lock.json
      
      - name: Install dependencies
        working-directory: ./portfolio
        run: npm ci
      
      - name: Build application
        working-directory: ./portfolio
        run: npm run build
      
      - name: Run Lighthouse CI
        working-directory: ./portfolio
        run: |
          npm install -g @lhci/cli@0.13.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: ./portfolio/.lighthouseci
          retention-days: 30

  playwright-performance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: portfolio/package-lock.json
      
      - name: Install dependencies
        working-directory: ./portfolio
        run: npm ci
      
      - name: Install Playwright browsers
        working-directory: ./portfolio
        run: npx playwright install --with-deps chromium
      
      - name: Build application
        working-directory: ./portfolio
        run: npm run build
        
      - name: Run performance tests
        working-directory: ./portfolio
        run: npm run test:e2e:perf
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-performance-results
          path: |
            ./portfolio/test-results/
            ./portfolio/playwright-report/
          retention-days: 30

  bundle-size:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: portfolio/package-lock.json
      
      - name: Install dependencies
        working-directory: ./portfolio
        run: npm ci
      
      - name: Build and analyze bundle
        working-directory: ./portfolio
        run: |
          npm run build
          npm run analyze:bundle > bundle-report.txt
      
      - name: Comment bundle size on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('./portfolio/bundle-report.txt', 'utf8');
            
            // Extract key metrics from report
            const metrics = report.match(/Total.*?Gzipped.*?(\d+\.?\d*\s*[KMG]B)/);
            const totalSize = metrics ? metrics[1] : 'Unknown';
            
            const comment = `## ðŸ“¦ Bundle Size Report
            
            **Total Bundle Size (Gzipped)**: ${totalSize}
            
            <details>
            <summary>Full Report</summary>
            
            \`\`\`
            ${report}
            \`\`\`
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  performance-regression-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [lighthouse, playwright-performance]
    steps:
      - name: Download current results
        uses: actions/download-artifact@v4
        with:
          name: lighthouse-results
          path: ./current
      
      - name: Compare with base branch
        run: |
          echo "Performance regression check would compare:"
          echo "- Current branch metrics vs main branch"
          echo "- Alert if Core Web Vitals regress"
          echo "- Block merge if performance budgets exceeded"