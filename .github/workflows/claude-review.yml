name: Claude Code Analysis

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  pull_request:
    types: [opened, ready_for_review, synchronize, labeled, closed]

# Cancel in-progress runs for the same PR  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Automated comprehensive review for all PRs
  automated-review:
    name: Automated Claude Review
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
      issues: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for comprehensive analysis
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Claude Code CLI
        run: |
          npm install -g @anthropic-ai/claude-code
          claude doctor  # Verify installation
          
      - name: Comprehensive Code Review with Claude CLI
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY || secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          # Check if we have authentication
          if [ -z "$ANTHROPIC_API_KEY" ]; then
            echo "❌ No ANTHROPIC_API_KEY found in secrets"
            echo "Please add ANTHROPIC_API_KEY to repository secrets for Claude CLI usage"
            exit 1
          fi
          
          echo "✅ Authentication configured"
          # Create comprehensive review prompt
          cat > review_prompt.md << 'EOF'
          Please perform a comprehensive code review of this pull request. 

          ## Review Context
          Read CLAUDE.md first to understand repository guidelines, then analyze this PR systematically.

          ## Focus Areas (High Priority)
          1. **Performance implications** - test timeouts, CI optimization patterns, execution bottlenecks
          2. **Package boundary violations** - strict separation between receipt_dynamo (data layer) and receipt_label (business logic)  
          3. **Critical bugs or security issues** - authentication, data validation, error handling, runtime failures
          4. **Architecture alignment** - consistency with CI optimization patterns and self-hosted runners

          ## Additional Analysis (Medium Priority)
          5. **Pattern detection logic** - overlapping matches, race conditions, algorithm correctness
          6. **Cost optimization** - AWS resource usage, API call efficiency, DynamoDB query patterns
          7. **Test strategy** - integration with optimized test matrix and parallel execution
          8. **DynamoDB best practices** - GSI usage, query patterns, resilience patterns

          ## Repository Context
          - Uses optimized CI with self-hosted ARM64 runners
          - Recent 48% CI execution time reduction through test optimization  
          - Strict package separation: receipt_dynamo (data) vs receipt_label (business logic)
          - DynamoDB with 4 GSIs for different query patterns
          - Cost-optimized GitHub Actions workflow ($48/month → $5/month target)

          ## Instructions
          1. Read all changed files in this PR
          2. For each significant finding, provide:
             - File path and line numbers
             - Description of the issue/concern
             - Specific recommendation for improvement
             - Severity level (Critical/High/Medium/Low)
          3. Skip minor style issues (handled by auto-formatters)
          4. Focus on actionable, concrete improvements
          5. Be thorough but concise

          Analyze the PR changes and provide detailed findings.
          EOF

          # Run Claude Code CLI with comprehensive review
          echo "🤖 Starting comprehensive code review with Claude CLI..."
          
          if claude -p "$(cat review_prompt.md)" --output-format markdown > claude_review.md 2>&1; then
            echo "✅ Claude review completed successfully"
            
            # Add header to review
            {
              echo "## 🤖 Automated Claude Code Review"
              echo ""
              echo "_Generated by Claude CLI on $(date)_"
              echo ""
              cat claude_review.md
            } > final_review.md
            
            # Post results as PR comment
            gh pr comment ${{ github.event.pull_request.number }} --body-file final_review.md
          else
            echo "❌ Claude review failed, posting error"
            cat > error_review.md << 'ERROR_EOF'
          ## 🤖 Claude Code Review - Error
          
          The automated code review encountered an error. Please check the workflow logs for details.
          
          You can still request manual assistance by commenting `@claude` with specific questions.
          ERROR_EOF
            
            gh pr comment ${{ github.event.pull_request.number }} --body-file error_review.md
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Integration status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Automated Claude review completed');
            console.log('Event type:', '${{ github.event_name }}');
            console.log('Review file created:', '${{ hashFiles('claude_review.md') }}');

  # Manual assistance when @claude is mentioned
  manual-assistance:
    name: Manual Claude Assistance
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude'))
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
      issues: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Claude Manual Assistance
        uses: anthropics/claude-code-action@v0.0.32
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          trigger_phrase: "@claude"
          max_turns: "5"
          timeout_minutes: "10"
          custom_instructions: |
            You are providing targeted assistance for a portfolio project with optimized CI/CD.
            
            Focus on answering the specific question asked. Key context:
            - Strict package separation: receipt_dynamo (data) vs receipt_label (business logic)
            - Optimized CI with self-hosted ARM64 runners  
            - Cost-optimized GitHub Actions workflow
            - DynamoDB with 4 GSIs for different query patterns
            
            Be helpful, concise, and actionable. Reference specific files/lines when relevant.

  cleanup-on-merge:
    name: Cleanup Comments on Merge
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
      - name: Delete Claude comments from merged PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number
            });
            
            // Find Claude comments
            const claudeComments = comments.filter(comment => 
              comment.user.login === 'github-actions[bot]' &&
              comment.body.includes('🤖 Claude')
            );
            
            // Delete all Claude comments
            for (const comment of claudeComments) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id
              });
            }
            
            console.log(`Deleted ${claudeComments.length} Claude comments from merged PR`);