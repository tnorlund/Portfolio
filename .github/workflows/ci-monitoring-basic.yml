name: Basic CI Monitoring

on:
  workflow_run:
    workflows: ["Main CI/CD Pipeline", "PR Checks"]
    types: [completed]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      days:
        description: 'Days to analyze (default: 7)'
        required: false
        default: '7'

jobs:
  collect-metrics:
    name: Collect Basic CI Metrics
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'failure' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psutil
      
      - name: Collect workflow metrics
        run: |
          python scripts/ci_profiler.py --collect --job-name "basic-ci-monitor"
      
      - name: Upload metrics
        uses: actions/upload-artifact@v4
        with:
          name: ci-basic-metrics-${{ github.run_id }}
          path: ci-metrics/
          retention-days: 30

  analyze-performance:
    name: Analyze CI Performance
    runs-on: ubuntu-latest
    needs: collect-metrics
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psutil
      
      - name: Download historical metrics
        uses: actions/download-artifact@v4
        with:
          pattern: ci-basic-metrics-*
          path: ci-metrics/
          merge-multiple: true
      
      - name: Analyze CI performance
        run: |
          python scripts/ci_profiler.py --analyze --days ${{ github.event.inputs.days || '7' }}
      
      - name: Generate performance report
        run: |
          python scripts/ci_profiler.py --report --days ${{ github.event.inputs.days || '7' }}
      
      - name: Upload analysis results
        uses: actions/upload-artifact@v4
        with:
          name: ci-basic-analysis-${{ github.run_id }}
          path: ci-metrics/
          retention-days: 90

  summary:
    name: CI Monitoring Summary
    runs-on: ubuntu-latest
    needs: [collect-metrics, analyze-performance]
    if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
    steps:
      - name: Create summary
        run: |
          echo "# Basic CI Monitoring Summary" > summary.md
          echo "" >> summary.md
          echo "**Date:** $(date)" >> summary.md
          echo "**Trigger:** ${{ github.event_name }}" >> summary.md
          echo "" >> summary.md
          echo "## Job Status" >> summary.md
          echo "- Collect Metrics: ${{ needs.collect-metrics.result }}" >> summary.md
          echo "- Analyze Performance: ${{ needs.analyze-performance.result }}" >> summary.md
          echo "" >> summary.md
          echo "## Next Steps" >> summary.md
          echo "- Review performance trends weekly" >> summary.md
          echo "- Consider implementing caching optimizations if build times increase" >> summary.md
          echo "- Monitor for patterns in failures or slow builds" >> summary.md
          
          cat summary.md
      
      - name: Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: ci-basic-summary-${{ github.run_id }}
          path: summary.md
          retention-days: 30