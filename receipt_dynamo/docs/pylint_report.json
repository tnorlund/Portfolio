[
    {
        "type": "warning",
        "module": "receipt_dynamo.utils.retry_with_backoff",
        "obj": "retry_with_backoff.decorator.wrapper",
        "line": 81,
        "column": 20,
        "endLine": 81,
        "endColumn": 30,
        "path": "receipt_dynamo/utils/retry_with_backoff.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._word",
        "obj": "_Word.add_words",
        "line": 79,
        "column": 8,
        "endLine": 79,
        "endColumn": 32,
        "path": "receipt_dynamo/data/_word.py",
        "symbol": "no-member",
        "message": "Instance of '_Word' has no '_add_entities_batch' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._label_count_cache",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 43,
        "path": "receipt_dynamo/data/_label_count_cache.py",
        "symbol": "unused-import",
        "message": "Unused ClientError imported from botocore.exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._label_count_cache",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 16,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_label_count_cache.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._label_count_cache",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 16,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_label_count_cache.py",
        "symbol": "unused-import",
        "message": "Unused EntityAlreadyExistsError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._label_count_cache",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 16,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_label_count_cache.py",
        "symbol": "unused-import",
        "message": "Unused EntityNotFoundError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._ocr_routing_decision",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 43,
        "path": "receipt_dynamo/data/_ocr_routing_decision.py",
        "symbol": "unused-import",
        "message": "Unused ClientError imported from botocore.exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._ocr_routing_decision",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 22,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_ocr_routing_decision.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBAccessError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._ocr_routing_decision",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 22,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_ocr_routing_decision.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._ocr_routing_decision",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 22,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_ocr_routing_decision.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBServerError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._ocr_routing_decision",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 22,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_ocr_routing_decision.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBThroughputError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._ocr_routing_decision",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 22,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_ocr_routing_decision.py",
        "symbol": "unused-import",
        "message": "Unused EntityAlreadyExistsError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._ocr_routing_decision",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 22,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_ocr_routing_decision.py",
        "symbol": "unused-import",
        "message": "Unused OperationError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data.resilient_dynamo_client",
        "obj": "ResilientDynamoClient",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 27,
        "path": "receipt_dynamo/data/resilient_dynamo_client.py",
        "symbol": "too-many-ancestors",
        "message": "Too many ancestors (23/7)",
        "message-id": "R0901"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data.dynamo_client",
        "obj": "DynamoClient",
        "line": 58,
        "column": 0,
        "endLine": 58,
        "endColumn": 18,
        "path": "receipt_dynamo/data/dynamo_client.py",
        "symbol": "too-many-ancestors",
        "message": "Too many ancestors (34/7)",
        "message-id": "R0901"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._letter",
        "obj": "",
        "line": 291,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (83/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._letter",
        "obj": "",
        "line": 310,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_letter.py",
        "symbol": "missing-final-newline",
        "message": "Final newline missing",
        "message-id": "C0304"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._letter",
        "obj": "_Letter.add_letters",
        "line": 80,
        "column": 8,
        "endLine": 80,
        "endColumn": 32,
        "path": "receipt_dynamo/data/_letter.py",
        "symbol": "no-member",
        "message": "Instance of '_Letter' has no '_add_entities_batch' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._job_status",
        "obj": "",
        "line": 51,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_job_status.py",
        "symbol": "line-too-long",
        "message": "Line too long (88/79)",
        "message-id": "C0301"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_status",
        "obj": "_JobStatus.add_job_status",
        "line": 47,
        "column": 8,
        "endLine": 52,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_status.py",
        "symbol": "too-many-function-args",
        "message": "Too many positional arguments for method call",
        "message-id": "E1121"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_status",
        "obj": "_JobStatus.add_job_status",
        "line": 47,
        "column": 8,
        "endLine": 52,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_status.py",
        "symbol": "redundant-keyword-arg",
        "message": "Argument 'condition_expression' passed by position and keyword in method call",
        "message-id": "E1124"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_status",
        "obj": "_JobStatus._get_job_with_status",
        "line": 196,
        "column": 15,
        "endLine": 196,
        "endColumn": 26,
        "path": "receipt_dynamo/data/_job_status.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'ClientError'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_dependency",
        "obj": "_JobDependency.add_job_dependency",
        "line": 63,
        "column": 8,
        "endLine": 68,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_dependency.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'entity_class' in method call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_dependency",
        "obj": "_JobDependency.add_job_dependency",
        "line": 63,
        "column": 8,
        "endLine": 68,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_dependency.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'param_name' in method call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_dependency",
        "obj": "_JobDependency.delete_job_dependency",
        "line": 205,
        "column": 8,
        "endLine": 205,
        "endColumn": 43,
        "path": "receipt_dynamo/data/_job_dependency.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'entity_class' in method call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_dependency",
        "obj": "_JobDependency.delete_job_dependency",
        "line": 205,
        "column": 8,
        "endLine": 205,
        "endColumn": 43,
        "path": "receipt_dynamo/data/_job_dependency.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'param_name' in method call",
        "message-id": "E1120"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._job_dependency",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 43,
        "path": "receipt_dynamo/data/_job_dependency.py",
        "symbol": "unused-import",
        "message": "Unused ClientError imported from botocore.exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._job_log",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 43,
        "path": "receipt_dynamo/data/_job_log.py",
        "symbol": "unused-import",
        "message": "Unused ClientError imported from botocore.exceptions",
        "message-id": "W0611"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._image",
        "obj": "_Image.get_image",
        "line": 80,
        "column": 17,
        "endLine": 86,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_image.py",
        "symbol": "unexpected-keyword-arg",
        "message": "Unexpected keyword argument 'consistent_read' in method call",
        "message-id": "E1123"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 95,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "line-too-long",
        "message": "Line too long (81/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 99,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "line-too-long",
        "message": "Line too long (83/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 113,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "line-too-long",
        "message": "Line too long (88/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 136,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "line-too-long",
        "message": "Line too long (81/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 140,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "line-too-long",
        "message": "Line too long (86/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 152,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "line-too-long",
        "message": "Line too long (84/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 154,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "line-too-long",
        "message": "Line too long (83/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 202,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "line-too-long",
        "message": "Line too long (86/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 216,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "line-too-long",
        "message": "Line too long (88/79)",
        "message-id": "C0301"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "_ReceiptSection.list_receipt_sections",
        "line": 377,
        "column": 15,
        "endLine": 377,
        "endColumn": 34,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "no-member",
        "message": "Instance of '_ReceiptSection' has no '_query_by_type' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 16,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "unused-import",
        "message": "Unused QueryInputTypeDef imported from receipt_dynamo.data.base_operations",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 24,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 24,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBServerError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 24,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBThroughputError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_section",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 24,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_receipt_section.py",
        "symbol": "unused-import",
        "message": "Unused OperationError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_metadata",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 43,
        "path": "receipt_dynamo/data/_receipt_metadata.py",
        "symbol": "unused-import",
        "message": "Unused ClientError imported from botocore.exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_metadata",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 16,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_receipt_metadata.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBBaseOperations imported from receipt_dynamo.data.base_operations",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_metadata",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 16,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_receipt_metadata.py",
        "symbol": "unused-import",
        "message": "Unused QueryInputTypeDef imported from receipt_dynamo.data.base_operations",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._places_cache",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 14,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_places_cache.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBBaseOperations imported from receipt_dynamo.data.base_operations",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._places_cache",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 19,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_places_cache.py",
        "symbol": "unused-import",
        "message": "Unused EntityNotFoundError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_letter",
        "obj": "",
        "line": 84,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_letter",
        "obj": "",
        "line": 105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_letter",
        "obj": "",
        "line": 136,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (83/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_letter",
        "obj": "",
        "line": 157,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_letter",
        "obj": "",
        "line": 160,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_letter",
        "obj": "",
        "line": 211,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_letter",
        "obj": "",
        "line": 221,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (83/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_letter",
        "obj": "",
        "line": 242,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_letter",
        "obj": "",
        "line": 288,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data._receipt_letter",
        "obj": "_ReceiptLetter.delete_receipt_letter",
        "line": 163,
        "column": 4,
        "endLine": 163,
        "endColumn": 29,
        "path": "receipt_dynamo/data/_receipt_letter.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data._receipt_letter",
        "obj": "_ReceiptLetter.get_receipt_letter",
        "line": 248,
        "column": 4,
        "endLine": 248,
        "endColumn": 26,
        "path": "receipt_dynamo/data/_receipt_letter.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_structure_analysis",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 16,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_receipt_structure_analysis.py",
        "symbol": "unused-import",
        "message": "Unused CommonValidationMixin imported from receipt_dynamo.data.base_operations",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_structure_analysis",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 16,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_receipt_structure_analysis.py",
        "symbol": "unused-import",
        "message": "Unused QueryByTypeMixin imported from receipt_dynamo.data.base_operations",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 461,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 474,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 488,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 494,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 514,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 529,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 537,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 540,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "line-too-long",
        "message": "Line too long (81/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 543,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 550,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 556,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "_ReceiptWordLabel._handle_add_receipt_word_label_error",
        "line": 101,
        "column": 8,
        "endLine": 108,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'EntityValidationError' from outer scope (line 18)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "_ReceiptWordLabel._handle_add_receipt_word_label_error",
        "line": 101,
        "column": 8,
        "endLine": 108,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "reimported",
        "message": "Reimport 'EntityValidationError' (imported line 18)",
        "message-id": "W0404"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "_ReceiptWordLabel._handle_add_receipt_word_label_error",
        "line": 101,
        "column": 8,
        "endLine": 108,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (receipt_dynamo.data.shared_exceptions.DynamoDBError, receipt_dynamo.data.shared_exceptions.DynamoDBServerError, receipt_dynamo.data.shared_exceptions.DynamoDBThroughputError, receipt_dynamo.data.shared_exceptions.DynamoDBValidationError, receipt_dynamo.data.shared_exceptions.EntityAlreadyExistsError, receipt_dynamo.data.shared_exceptions.EntityValidationError)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "_ReceiptWordLabel._handle_add_receipt_word_label_error",
        "line": 101,
        "column": 8,
        "endLine": 108,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "unused-import",
        "message": "Unused EntityValidationError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "_ReceiptWordLabel.add_receipt_word_labels",
        "line": 161,
        "column": 8,
        "endLine": 164,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (receipt_dynamo.data.base_operations.PutRequestTypeDef, receipt_dynamo.data.base_operations.WriteRequestTypeDef)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "_ReceiptWordLabel._handle_add_receipt_word_labels_error",
        "line": 176,
        "column": 8,
        "endLine": 182,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'EntityValidationError' from outer scope (line 18)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "_ReceiptWordLabel._handle_add_receipt_word_labels_error",
        "line": 176,
        "column": 8,
        "endLine": 182,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "reimported",
        "message": "Reimport 'EntityValidationError' (imported line 18)",
        "message-id": "W0404"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "_ReceiptWordLabel._handle_add_receipt_word_labels_error",
        "line": 176,
        "column": 8,
        "endLine": 182,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (receipt_dynamo.data.shared_exceptions.DynamoDBError, receipt_dynamo.data.shared_exceptions.DynamoDBServerError, receipt_dynamo.data.shared_exceptions.DynamoDBThroughputError, receipt_dynamo.data.shared_exceptions.DynamoDBValidationError, receipt_dynamo.data.shared_exceptions.EntityValidationError)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "_ReceiptWordLabel._handle_add_receipt_word_labels_error",
        "line": 176,
        "column": 8,
        "endLine": 182,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "unused-import",
        "message": "Unused EntityValidationError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "_ReceiptWordLabel.get_receipt_word_label",
        "line": 287,
        "column": 4,
        "endLine": 287,
        "endColumn": 30,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._receipt_word_label",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 17,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_receipt_word_label.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBBaseOperations imported from receipt_dynamo.data.base_operations",
        "message-id": "W0611"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data._embedding_batch_result",
        "obj": "_EmbeddingBatchResult.get_embedding_batch_result",
        "line": 193,
        "column": 4,
        "endLine": 193,
        "endColumn": 34,
        "path": "receipt_dynamo/data/_embedding_batch_result.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._embedding_batch_result",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 43,
        "path": "receipt_dynamo/data/_embedding_batch_result.py",
        "symbol": "unused-import",
        "message": "Unused ClientError imported from botocore.exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._embedding_batch_result",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 16,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_embedding_batch_result.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBBaseOperations imported from receipt_dynamo.data.base_operations",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._embedding_batch_result",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 21,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_embedding_batch_result.py",
        "symbol": "unused-import",
        "message": "Unused BatchOperationError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.add_job_checkpoint",
        "line": 82,
        "column": 8,
        "endLine": 82,
        "endColumn": 29,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-member",
        "message": "Instance of '_JobCheckpoint' has no '_validate_entity' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.add_job_checkpoint",
        "line": 87,
        "column": 8,
        "endLine": 92,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'entity_class' in method call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.add_job_checkpoint",
        "line": 87,
        "column": 8,
        "endLine": 92,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'param_name' in method call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.get_job_checkpoint",
        "line": 121,
        "column": 17,
        "endLine": 121,
        "endColumn": 33,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-member",
        "message": "Instance of '_JobCheckpoint' has no '_get_entity' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.list_job_checkpoints",
        "line": 240,
        "column": 15,
        "endLine": 240,
        "endColumn": 35,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-member",
        "message": "Instance of '_JobCheckpoint' has no '_query_entities' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.get_best_checkpoint",
        "line": 277,
        "column": 21,
        "endLine": 277,
        "endColumn": 41,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-member",
        "message": "Instance of '_JobCheckpoint' has no '_query_entities' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.delete_job_checkpoint",
        "line": 314,
        "column": 21,
        "endLine": 325,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unexpected-keyword-arg",
        "message": "Unexpected keyword argument 'learning_rate' in constructor call",
        "message-id": "E1123"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.delete_job_checkpoint",
        "line": 314,
        "column": 21,
        "endLine": 325,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unexpected-keyword-arg",
        "message": "Unexpected keyword argument 'train_loss' in constructor call",
        "message-id": "E1123"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.delete_job_checkpoint",
        "line": 314,
        "column": 21,
        "endLine": 325,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unexpected-keyword-arg",
        "message": "Unexpected keyword argument 'val_loss' in constructor call",
        "message-id": "E1123"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.delete_job_checkpoint",
        "line": 314,
        "column": 21,
        "endLine": 325,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 's3_bucket' in constructor call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.delete_job_checkpoint",
        "line": 314,
        "column": 21,
        "endLine": 325,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 's3_key' in constructor call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.delete_job_checkpoint",
        "line": 314,
        "column": 21,
        "endLine": 325,
        "endColumn": 9,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'size_bytes' in constructor call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.delete_job_checkpoint",
        "line": 326,
        "column": 8,
        "endLine": 326,
        "endColumn": 39,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'entity_class' in method call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.delete_job_checkpoint",
        "line": 326,
        "column": 8,
        "endLine": 326,
        "endColumn": 39,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'param_name' in method call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "_JobCheckpoint.list_all_job_checkpoints",
        "line": 364,
        "column": 15,
        "endLine": 364,
        "endColumn": 35,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "no-member",
        "message": "Instance of '_JobCheckpoint' has no '_query_entities' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": 1,
        "endColumn": 59,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unused-import",
        "message": "Unused List imported from typing",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 43,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unused-import",
        "message": "Unused ClientError imported from botocore.exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 9,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBBaseOperations imported from receipt_dynamo.data.base_operations",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 19,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 19,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBServerError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 19,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBThroughputError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 19,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unused-import",
        "message": "Unused DynamoDBValidationError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 19,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unused-import",
        "message": "Unused OperationError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._job_checkpoint",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 19,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_job_checkpoint.py",
        "symbol": "unused-import",
        "message": "Unused ReceiptDynamoError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data._receipt_validation_result",
        "obj": "_ReceiptValidationResult.list_receipt_validation_results_for_field",
        "line": 326,
        "column": 4,
        "endLine": 326,
        "endColumn": 49,
        "path": "receipt_dynamo/data/_receipt_validation_result.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data._completion_batch_result",
        "obj": "_CompletionBatchResult.get_completion_batch_result",
        "line": 116,
        "column": 4,
        "endLine": 116,
        "endColumn": 35,
        "path": "receipt_dynamo/data/_completion_batch_result.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._completion_batch_result",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 43,
        "path": "receipt_dynamo/data/_completion_batch_result.py",
        "symbol": "unused-import",
        "message": "Unused ClientError imported from botocore.exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._completion_batch_result",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 14,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_completion_batch_result.py",
        "symbol": "unused-import",
        "message": "Unused CommonValidationMixin imported from receipt_dynamo.data.base_operations",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._completion_batch_result",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 14,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_completion_batch_result.py",
        "symbol": "unused-import",
        "message": "Unused TransactionalOperationsMixin imported from receipt_dynamo.data.base_operations",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._completion_batch_result",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 20,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_completion_batch_result.py",
        "symbol": "unused-import",
        "message": "Unused BatchOperationError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._completion_batch_result",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 20,
        "endColumn": 1,
        "path": "receipt_dynamo/data/_completion_batch_result.py",
        "symbol": "unused-import",
        "message": "Unused OperationError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data._ai_usage_metric",
        "obj": "",
        "line": 69,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/_ai_usage_metric.py",
        "symbol": "line-too-long",
        "message": "Line too long (83/79)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._ai_usage_metric",
        "obj": "_AIUsageMetric.put_ai_usage_metric.<lambda>",
        "line": 32,
        "column": 42,
        "endLine": 32,
        "endColumn": 75,
        "path": "receipt_dynamo/data/_ai_usage_metric.py",
        "symbol": "unnecessary-lambda",
        "message": "Lambda may not be necessary",
        "message-id": "W0108"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._ai_usage_metric",
        "obj": "_AIUsageMetric.batch_put_ai_usage_metrics",
        "line": 67,
        "column": 15,
        "endLine": 67,
        "endColumn": 24,
        "path": "receipt_dynamo/data/_ai_usage_metric.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data._ai_usage_metric",
        "obj": "_AIUsageMetric.get_ai_usage_metric.<lambda>",
        "line": 135,
        "column": 27,
        "endLine": 135,
        "endColumn": 78,
        "path": "receipt_dynamo/data/_ai_usage_metric.py",
        "symbol": "unnecessary-lambda",
        "message": "Lambda may not be necessary",
        "message-id": "W0108"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "QueryByParentMixin._query_by_parent",
        "line": 499,
        "column": 4,
        "endLine": 499,
        "endColumn": 24,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin",
        "line": 576,
        "column": 8,
        "endLine": 576,
        "endColumn": 61,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "reimported",
        "message": "Reimport 'EntityValidationError' (imported line 20)",
        "message-id": "W0404"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin",
        "line": 576,
        "column": 8,
        "endLine": 576,
        "endColumn": 61,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (shared_exceptions.EntityValidationError)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_image_id",
        "line": 591,
        "column": 8,
        "endLine": 591,
        "endColumn": 54,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'assert_valid_uuid' from outer scope (line 21)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_image_id",
        "line": 592,
        "column": 8,
        "endLine": 592,
        "endColumn": 61,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'EntityValidationError' from outer scope (line 20)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_image_id",
        "line": 591,
        "column": 8,
        "endLine": 591,
        "endColumn": 54,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "reimported",
        "message": "Reimport 'assert_valid_uuid' (imported line 21)",
        "message-id": "W0404"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_image_id",
        "line": 591,
        "column": 8,
        "endLine": 591,
        "endColumn": 54,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (entities.util.assert_valid_uuid)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_image_id",
        "line": 592,
        "column": 8,
        "endLine": 592,
        "endColumn": 61,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "reimported",
        "message": "Reimport 'EntityValidationError' (imported line 20)",
        "message-id": "W0404"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_image_id",
        "line": 592,
        "column": 8,
        "endLine": 592,
        "endColumn": 61,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (shared_exceptions.EntityValidationError)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_receipt_id",
        "line": 611,
        "column": 8,
        "endLine": 611,
        "endColumn": 61,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'EntityValidationError' from outer scope (line 20)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_receipt_id",
        "line": 611,
        "column": 8,
        "endLine": 611,
        "endColumn": 61,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "reimported",
        "message": "Reimport 'EntityValidationError' (imported line 20)",
        "message-id": "W0404"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_receipt_id",
        "line": 611,
        "column": 8,
        "endLine": 611,
        "endColumn": 61,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (shared_exceptions.EntityValidationError)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_pagination_key",
        "line": 632,
        "column": 8,
        "endLine": 632,
        "endColumn": 61,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'EntityValidationError' from outer scope (line 20)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_pagination_key",
        "line": 632,
        "column": 8,
        "endLine": 632,
        "endColumn": 61,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "reimported",
        "message": "Reimport 'EntityValidationError' (imported line 20)",
        "message-id": "W0404"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "CommonValidationMixin._validate_pagination_key",
        "line": 632,
        "column": 8,
        "endLine": 632,
        "endColumn": 61,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (shared_exceptions.EntityValidationError)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 71,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "unused-import",
        "message": "Unused EntityValidationError imported from receipt_dynamo.data.shared_exceptions",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.data.base_operations.mixins",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 58,
        "path": "receipt_dynamo/data/base_operations/mixins.py",
        "symbol": "unused-import",
        "message": "Unused assert_valid_uuid imported from receipt_dynamo.entities.util",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data.base_operations.error_handling",
        "obj": "",
        "line": 105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/base_operations/error_handling.py",
        "symbol": "line-too-long",
        "message": "Line too long (87/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data.base_operations.error_handling",
        "obj": "",
        "line": 119,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/base_operations/error_handling.py",
        "symbol": "line-too-long",
        "message": "Line too long (81/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data.base_operations.error_handling",
        "obj": "",
        "line": 255,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/base_operations/error_handling.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data.base_operations.error_handling",
        "obj": "",
        "line": 258,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/base_operations/error_handling.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data.base_operations.error_handling",
        "obj": "",
        "line": 354,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/base_operations/error_handling.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data.base_operations.error_handling",
        "obj": "exponential_backoff_retry",
        "line": 388,
        "column": 0,
        "endLine": 388,
        "endColumn": 29,
        "path": "receipt_dynamo/data/base_operations/error_handling.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.data.base_operations.flattened_mixin",
        "obj": "",
        "line": 155,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/data/base_operations/flattened_mixin.py",
        "symbol": "line-too-long",
        "message": "Line too long (84/79)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data.base_operations.flattened_mixin",
        "obj": "FlattenedStandardMixin._query_entities",
        "line": 333,
        "column": 4,
        "endLine": 333,
        "endColumn": 23,
        "path": "receipt_dynamo/data/base_operations/flattened_mixin.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data.base_operations.flattened_mixin",
        "obj": "FlattenedStandardMixin._query_by_parent",
        "line": 406,
        "column": 4,
        "endLine": 406,
        "endColumn": 24,
        "path": "receipt_dynamo/data/base_operations/flattened_mixin.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data.base_operations.shared_utils",
        "obj": "build_query_params",
        "line": 62,
        "column": 0,
        "endLine": 62,
        "endColumn": 22,
        "path": "receipt_dynamo/data/base_operations/shared_utils.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data.base_operations.base",
        "obj": "DynamoDBBaseOperations._get_entity",
        "line": 266,
        "column": 4,
        "endLine": 266,
        "endColumn": 19,
        "path": "receipt_dynamo/data/base_operations/base.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.data.base_operations.base",
        "obj": "DynamoDBBaseOperations._query_entities",
        "line": 332,
        "column": 4,
        "endLine": 332,
        "endColumn": 23,
        "path": "receipt_dynamo/data/base_operations/base.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (10/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "",
        "line": 68,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "fixme",
        "message": "TODO: Add max_concurrent_jobs and priority as needed",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "",
        "line": 181,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "fixme",
        "message": "TODO: Set position based on queue position logic if needed",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "",
        "line": 201,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "fixme",
        "message": "TODO: Implement get_queue_job in data layer",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "",
        "line": 216,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "fixme",
        "message": "TODO: Implement update_queue_job in data layer",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "",
        "line": 318,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "fixme",
        "message": "TODO: QueueJob entity doesn't have status tracking attributes",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "",
        "line": 340,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "fixme",
        "message": "TODO: QueueJob entity doesn't have status tracking attributes",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "",
        "line": 360,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "fixme",
        "message": "TODO: QueueJob entity doesn't have status tracking attributes",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "QueueService.create_queue",
        "line": 37,
        "column": 4,
        "endLine": 37,
        "endColumn": 20,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "QueueService.create_queue",
        "line": 40,
        "column": 8,
        "endLine": 40,
        "endColumn": 17,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'name'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "QueueService.create_queue",
        "line": 42,
        "column": 8,
        "endLine": 42,
        "endColumn": 23,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'created_by'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "QueueService.create_queue",
        "line": 43,
        "column": 8,
        "endLine": 43,
        "endColumn": 42,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'metadata'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "QueueService.create_queue",
        "line": 44,
        "column": 8,
        "endLine": 44,
        "endColumn": 38,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'tags'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "QueueService.list_queues_by_user",
        "line": 133,
        "column": 8,
        "endLine": 133,
        "endColumn": 20,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'user_id'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "QueueService.add_job_to_queue",
        "line": 157,
        "column": 8,
        "endLine": 157,
        "endColumn": 42,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'metadata'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.queue_service",
        "obj": "QueueService.claim_job",
        "line": 303,
        "column": 39,
        "endLine": 303,
        "endColumn": 55,
        "path": "receipt_dynamo/services/queue_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'instance_id'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "",
        "line": 73,
        "column": 27,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "fixme",
        "message": "TODO: Get actual GPU count based on instance type",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "",
        "line": 75,
        "column": 42,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "fixme",
        "message": "TODO: Get actual launch time",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "",
        "line": 78,
        "column": 29,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "fixme",
        "message": "TODO: Determine if this is a spot instance",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "",
        "line": 79,
        "column": 39,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "fixme",
        "message": "TODO: Get actual health status",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "",
        "line": 130,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "fixme",
        "message": "TODO: Instance entity doesn't have last_seen attribute",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "",
        "line": 149,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "fixme",
        "message": "TODO: Instance entity doesn't have last_seen attribute",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "",
        "line": 224,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "fixme",
        "message": "TODO: list_instances_by_type is not implemented in data layer",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "",
        "line": 350,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "fixme",
        "message": "TODO: InstanceJob entity doesn't have metadata attribute",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "InstanceService.register_instance",
        "line": 38,
        "column": 4,
        "endLine": 38,
        "endColumn": 25,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (10/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "InstanceService.register_instance",
        "line": 42,
        "column": 8,
        "endLine": 42,
        "endColumn": 19,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'region'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "InstanceService.register_instance",
        "line": 44,
        "column": 8,
        "endLine": 44,
        "endColumn": 21,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'hostname'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "InstanceService.register_instance",
        "line": 47,
        "column": 8,
        "endLine": 47,
        "endColumn": 42,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'metadata'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "InstanceService.register_instance",
        "line": 48,
        "column": 8,
        "endLine": 48,
        "endColumn": 38,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'tags'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "InstanceService.assign_job_to_instance",
        "line": 270,
        "column": 8,
        "endLine": 270,
        "endColumn": 42,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'metadata'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "InstanceService.update_instance_job_status",
        "line": 330,
        "column": 8,
        "endLine": 330,
        "endColumn": 30,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'message'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "InstanceService.list_jobs_for_instance",
        "line": 375,
        "column": 8,
        "endLine": 375,
        "endColumn": 29,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'status'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.instance_service",
        "obj": "InstanceService.list_instances_for_job",
        "line": 399,
        "column": 8,
        "endLine": 399,
        "endColumn": 29,
        "path": "receipt_dynamo/services/instance_service.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'status'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.services.job_service",
        "obj": "JobService",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 16,
        "path": "receipt_dynamo/services/job_service.py",
        "symbol": "too-many-ancestors",
        "message": "Too many ancestors (20/7)",
        "message-id": "R0901"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.services.job_service",
        "obj": "JobService.create_job",
        "line": 43,
        "column": 4,
        "endLine": 43,
        "endColumn": 18,
        "path": "receipt_dynamo/services/job_service.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_service",
        "obj": "JobService.get_job",
        "line": 88,
        "column": 4,
        "endLine": 88,
        "endColumn": 15,
        "path": "receipt_dynamo/services/job_service.py",
        "symbol": "useless-parent-delegation",
        "message": "Useless parent or super() delegation in method 'get_job'",
        "message-id": "W0246"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_service",
        "obj": "JobService.update_job",
        "line": 98,
        "column": 4,
        "endLine": 98,
        "endColumn": 18,
        "path": "receipt_dynamo/services/job_service.py",
        "symbol": "useless-parent-delegation",
        "message": "Useless parent or super() delegation in method 'update_job'",
        "message-id": "W0246"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_service",
        "obj": "JobService.delete_job",
        "line": 102,
        "column": 4,
        "endLine": 102,
        "endColumn": 18,
        "path": "receipt_dynamo/services/job_service.py",
        "symbol": "useless-parent-delegation",
        "message": "Useless parent or super() delegation in method 'delete_job'",
        "message-id": "W0246"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.resource_operations",
        "obj": "",
        "line": 49,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/job_operations/resource_operations.py",
        "symbol": "fixme",
        "message": "TODO: Implement get_job_resources in _JobResource base class",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.services.job_operations.resource_operations",
        "obj": "JobResourceOperations.add_job_resource_with_params",
        "line": 14,
        "column": 4,
        "endLine": 14,
        "endColumn": 36,
        "path": "receipt_dynamo/services/job_operations/resource_operations.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.resource_operations",
        "obj": "JobResourceOperations.get_job_resources",
        "line": 47,
        "column": 32,
        "endLine": 47,
        "endColumn": 43,
        "path": "receipt_dynamo/services/job_operations/resource_operations.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'job_id'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.metric_operations",
        "obj": "",
        "line": 45,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/job_operations/metric_operations.py",
        "symbol": "fixme",
        "message": "TODO: Implement get_job_metrics in _JobMetric base class",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.services.job_operations.metric_operations",
        "obj": "JobMetricOperations.add_job_metric_with_params",
        "line": 13,
        "column": 4,
        "endLine": 13,
        "endColumn": 34,
        "path": "receipt_dynamo/services/job_operations/metric_operations.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.metric_operations",
        "obj": "JobMetricOperations.add_job_metric_with_params",
        "line": 19,
        "column": 8,
        "endLine": 19,
        "endColumn": 38,
        "path": "receipt_dynamo/services/job_operations/metric_operations.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'tags'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.metric_operations",
        "obj": "JobMetricOperations.get_job_metrics",
        "line": 43,
        "column": 30,
        "endLine": 43,
        "endColumn": 41,
        "path": "receipt_dynamo/services/job_operations/metric_operations.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'job_id'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.status_operations",
        "obj": "",
        "line": 45,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/job_operations/status_operations.py",
        "symbol": "fixme",
        "message": "TODO: Implement get_job_status_history in _JobStatus base class",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.services.job_operations.status_operations",
        "obj": "JobStatusOperations",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 25,
        "path": "receipt_dynamo/services/job_operations/status_operations.py",
        "symbol": "too-many-ancestors",
        "message": "Too many ancestors (9/7)",
        "message-id": "R0901"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.dependency_operations",
        "obj": "",
        "line": 44,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/job_operations/dependency_operations.py",
        "symbol": "fixme",
        "message": "TODO: Implement get_job_dependencies in _JobDependency base class",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.dependency_operations",
        "obj": "",
        "line": 49,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/job_operations/dependency_operations.py",
        "symbol": "fixme",
        "message": "TODO: Implement get_dependent_jobs in _JobDependency base class",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.dependency_operations",
        "obj": "",
        "line": 131,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/job_operations/dependency_operations.py",
        "symbol": "fixme",
        "message": "TODO: Implement actual artifact checking logic",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.dependency_operations",
        "obj": "JobDependencyOperations.add_job_dependency_with_params",
        "line": 18,
        "column": 8,
        "endLine": 18,
        "endColumn": 17,
        "path": "receipt_dynamo/services/job_operations/dependency_operations.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.dependency_operations",
        "obj": "JobDependencyOperations.get_job_dependencies",
        "line": 42,
        "column": 35,
        "endLine": 42,
        "endColumn": 46,
        "path": "receipt_dynamo/services/job_operations/dependency_operations.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'job_id'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.dependency_operations",
        "obj": "JobDependencyOperations.get_dependent_jobs",
        "line": 47,
        "column": 33,
        "endLine": 47,
        "endColumn": 44,
        "path": "receipt_dynamo/services/job_operations/dependency_operations.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'job_id'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.dependency_operations",
        "obj": "JobDependencyOperations._check_artifact_exists",
        "line": 121,
        "column": 37,
        "endLine": 121,
        "endColumn": 45,
        "path": "receipt_dynamo/services/job_operations/dependency_operations.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'job'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.dependency_operations",
        "obj": "JobDependencyOperations._check_artifact_exists",
        "line": 121,
        "column": 47,
        "endLine": 121,
        "endColumn": 65,
        "path": "receipt_dynamo/services/job_operations/dependency_operations.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'artifact_path'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.checkpoint_operations",
        "obj": "",
        "line": 42,
        "column": 28,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/job_operations/checkpoint_operations.py",
        "symbol": "fixme",
        "message": "TODO: Get actual checkpoint size",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.checkpoint_operations",
        "obj": "",
        "line": 52,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/services/job_operations/checkpoint_operations.py",
        "symbol": "fixme",
        "message": "TODO: Implement get_job_checkpoints in _JobCheckpoint base class",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.services.job_operations.checkpoint_operations",
        "obj": "JobCheckpointOperations.add_job_checkpoint_with_params",
        "line": 13,
        "column": 4,
        "endLine": 13,
        "endColumn": 38,
        "path": "receipt_dynamo/services/job_operations/checkpoint_operations.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.services.job_operations.checkpoint_operations",
        "obj": "JobCheckpointOperations.get_job_checkpoints",
        "line": 50,
        "column": 34,
        "endLine": 50,
        "endColumn": 45,
        "path": "receipt_dynamo/services/job_operations/checkpoint_operations.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'job_id'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.label_count_cache",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/label_count_cache.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.label_count_cache",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/label_count_cache.py",
        "symbol": "line-too-long",
        "message": "Line too long (87/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "",
        "line": 63,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "",
        "line": 94,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "",
        "line": 98,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "line-too-long",
        "message": "Line too long (85/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "",
        "line": 99,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "",
        "line": 155,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "line-too-long",
        "message": "Line too long (85/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "",
        "line": 246,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "",
        "line": 250,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "",
        "line": 254,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "DynamoDBItemExtractor.__call__",
        "line": 32,
        "column": 8,
        "endLine": 32,
        "endColumn": 11,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "unnecessary-ellipsis",
        "message": "Unnecessary ellipsis constant",
        "message-id": "W2301"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "EntityFactory.create_entity",
        "line": 46,
        "column": 4,
        "endLine": 46,
        "endColumn": 21,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "EntityFactory.extract_geometry_fields",
        "line": 207,
        "column": 8,
        "endLine": 211,
        "endColumn": 9,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (util.deserialize_bounding_box, util.deserialize_confidence, util.deserialize_coordinate_point)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.entity_factory",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 20,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/entity_factory.py",
        "symbol": "unused-import",
        "message": "Unused Union imported from typing",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.places_cache",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 12,
        "path": "receipt_dynamo/entities/places_cache.py",
        "symbol": "invalid-name",
        "message": "Class name \"SEARCH_TYPES\" doesn't conform to PascalCase naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.places_cache",
        "obj": "PlacesCache.__post_init__",
        "line": 58,
        "column": 16,
        "endLine": 58,
        "endColumn": 66,
        "path": "receipt_dynamo/entities/places_cache.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.places_cache",
        "obj": "PlacesCache._pad_search_value",
        "line": 106,
        "column": 12,
        "endLine": 106,
        "endColumn": 26,
        "path": "receipt_dynamo/entities/places_cache.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (hashlib)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.instance",
        "obj": "",
        "line": 60,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/instance.py",
        "symbol": "line-too-long",
        "message": "Line too long (89/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.instance",
        "obj": "",
        "line": 75,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/instance.py",
        "symbol": "line-too-long",
        "message": "Line too long (85/79)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.dynamodb_utils",
        "obj": "parse_dynamodb_value",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 24,
        "path": "receipt_dynamo/entities/dynamodb_utils.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (12/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.dynamodb_utils",
        "obj": "to_dynamodb_value",
        "line": 104,
        "column": 0,
        "endLine": 104,
        "endColumn": 21,
        "path": "receipt_dynamo/entities/dynamodb_utils.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (11/6)",
        "message-id": "R0911"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.dynamodb_utils",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 29,
        "path": "receipt_dynamo/entities/dynamodb_utils.py",
        "symbol": "unused-import",
        "message": "Unused datetime imported from datetime",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.dynamodb_utils",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 51,
        "path": "receipt_dynamo/entities/dynamodb_utils.py",
        "symbol": "unused-import",
        "message": "Unused List imported from typing",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.dynamodb_utils",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 51,
        "path": "receipt_dynamo/entities/dynamodb_utils.py",
        "symbol": "unused-import",
        "message": "Unused Optional imported from typing",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.dynamodb_utils",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 51,
        "path": "receipt_dynamo/entities/dynamodb_utils.py",
        "symbol": "unused-import",
        "message": "Unused Union imported from typing",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.label_metadata",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/label_metadata.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 275,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 538,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 539,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (81/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 564,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (87/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 566,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (81/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 587,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 589,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 603,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 604,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 679,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (92/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 1063,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (81/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 1064,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (83/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 1077,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (86/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 1079,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (81/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 1105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 1120,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (89/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 1173,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 1174,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1480/1000)",
        "message-id": "C0302"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "SerializationMixin._serialize_value",
        "line": 137,
        "column": 4,
        "endLine": 137,
        "endColumn": 24,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (16/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "SerializationMixin._dynamo_to_python",
        "line": 199,
        "column": 4,
        "endLine": 199,
        "endColumn": 25,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (11/6)",
        "message-id": "R0911"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "SerializationMixin.safe_deserialize_field",
        "line": 280,
        "column": 15,
        "endLine": 280,
        "endColumn": 24,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "SerializationMixin.safe_deserialize_field",
        "line": 269,
        "column": 16,
        "endLine": 277,
        "endColumn": 21,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "SerializationMixin.safe_deserialize_field",
        "line": 280,
        "column": 8,
        "endLine": 282,
        "endColumn": 26,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'e'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "WarpTransformMixin.warp_transform",
        "line": 662,
        "column": 4,
        "endLine": 662,
        "endColumn": 22,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (14/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.rotate",
        "line": 892,
        "column": 8,
        "endLine": 892,
        "endColumn": 19,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (math)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.warp_affine",
        "line": 977,
        "column": 4,
        "endLine": 977,
        "endColumn": 19,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.warp_affine",
        "line": 1038,
        "column": 8,
        "endLine": 1038,
        "endColumn": 19,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (math)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.warp_affine_normalized_forward",
        "line": 1047,
        "column": 4,
        "endLine": 1047,
        "endColumn": 38,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (12/10)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.warp_affine_normalized_forward",
        "line": 1047,
        "column": 4,
        "endLine": 1047,
        "endColumn": 38,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (12/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.warp_affine_normalized_forward",
        "line": 1049,
        "column": 8,
        "endLine": 1049,
        "endColumn": 16,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'a'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.warp_affine_normalized_forward",
        "line": 1050,
        "column": 8,
        "endLine": 1050,
        "endColumn": 16,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'b'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.warp_affine_normalized_forward",
        "line": 1052,
        "column": 8,
        "endLine": 1052,
        "endColumn": 16,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'd'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.warp_affine_normalized_forward",
        "line": 1053,
        "column": 8,
        "endLine": 1053,
        "endColumn": 16,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'e'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.warp_affine_normalized_forward",
        "line": 1059,
        "column": 8,
        "endLine": 1059,
        "endColumn": 20,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'flip_y'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.rotate_90_ccw_in_place",
        "line": 1156,
        "column": 8,
        "endLine": 1156,
        "endColumn": 19,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (math)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.rotate_90_ccw_in_place",
        "line": 1100,
        "column": 14,
        "endLine": 1100,
        "endColumn": 30,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'old_width'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.rotate_90_ccw_in_place",
        "line": 1100,
        "column": 32,
        "endLine": 1100,
        "endColumn": 49,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'old_height'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.entity_mixins",
        "obj": "GeometryMixin.inverse_perspective_transform",
        "line": 1224,
        "column": 4,
        "endLine": 1224,
        "endColumn": 37,
        "path": "receipt_dynamo/entities/entity_mixins.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (14/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_validation_category",
        "obj": "",
        "line": 58,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_validation_category.py",
        "symbol": "line-too-long",
        "message": "Line too long (100/79)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_validation_category",
        "obj": "dynamo_to_python",
        "line": 171,
        "column": 0,
        "endLine": 171,
        "endColumn": 20,
        "path": "receipt_dynamo/entities/receipt_validation_category.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (13/6)",
        "message-id": "R0911"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.receipt_validation_category",
        "obj": "dynamo_to_python",
        "line": 216,
        "column": 8,
        "endLine": 216,
        "endColumn": 11,
        "path": "receipt_dynamo/entities/receipt_validation_category.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'key'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_validation_category",
        "obj": "item_to_receipt_validation_category",
        "line": 221,
        "column": 0,
        "endLine": 221,
        "endColumn": 39,
        "path": "receipt_dynamo/entities/receipt_validation_category.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (61/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_label_analysis",
        "obj": "item_to_receipt_label_analysis",
        "line": 276,
        "column": 4,
        "endLine": 354,
        "endColumn": 41,
        "path": "receipt_dynamo/entities/receipt_label_analysis.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (7/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.batch_summary",
        "obj": "BatchSummary.to_dict",
        "line": 125,
        "column": 15,
        "endLine": 125,
        "endColumn": 38,
        "path": "receipt_dynamo/entities/batch_summary.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use dict(self) instead.",
        "message-id": "R1721"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.job_status",
        "obj": "",
        "line": 55,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/job_status.py",
        "symbol": "line-too-long",
        "message": "Line too long (89/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.job_status",
        "obj": "",
        "line": 79,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/job_status.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.job_status",
        "obj": "",
        "line": 82,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/job_status.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_structure_analysis",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_structure_analysis.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1211/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.receipt_structure_analysis",
        "obj": "",
        "line": 1074,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_structure_analysis.py",
        "symbol": "fixme",
        "message": "TODO: Use proper logging instead of print",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_structure_analysis",
        "obj": "ReceiptSection.__init__",
        "line": 186,
        "column": 4,
        "endLine": 186,
        "endColumn": 16,
        "path": "receipt_dynamo/entities/receipt_structure_analysis.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_structure_analysis",
        "obj": "ReceiptStructureAnalysis.__init__",
        "line": 445,
        "column": 4,
        "endLine": 445,
        "endColumn": 16,
        "path": "receipt_dynamo/entities/receipt_structure_analysis.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (12/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_structure_analysis",
        "obj": "item_to_receipt_structure_analysis",
        "line": 957,
        "column": 4,
        "endLine": 1075,
        "endColumn": 20,
        "path": "receipt_dynamo/entities/receipt_structure_analysis.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_structure_analysis",
        "obj": "item_to_receipt_structure_analysis",
        "line": 957,
        "column": 4,
        "endLine": 1075,
        "endColumn": 20,
        "path": "receipt_dynamo/entities/receipt_structure_analysis.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (7/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_structure_analysis",
        "obj": "item_to_receipt_structure_analysis",
        "line": 957,
        "column": 4,
        "endLine": 1075,
        "endColumn": 20,
        "path": "receipt_dynamo/entities/receipt_structure_analysis.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_structure_analysis",
        "obj": "item_to_receipt_structure_analysis",
        "line": 918,
        "column": 0,
        "endLine": 918,
        "endColumn": 38,
        "path": "receipt_dynamo/entities/receipt_structure_analysis.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (134/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.util",
        "obj": "shear_point",
        "line": 144,
        "column": 0,
        "endLine": 144,
        "endColumn": 15,
        "path": "receipt_dynamo/entities/util.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.job_metric",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 11,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/job_metric.py",
        "symbol": "unused-import",
        "message": "Unused parse_dynamodb_value imported from receipt_dynamo.entities.dynamodb_utils",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.job_metric",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 11,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/job_metric.py",
        "symbol": "unused-import",
        "message": "Unused to_dynamodb_value imported from receipt_dynamo.entities.dynamodb_utils",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.job",
        "obj": "",
        "line": 86,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/job.py",
        "symbol": "line-too-long",
        "message": "Line too long (89/79)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.job",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 10,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/job.py",
        "symbol": "unused-import",
        "message": "Unused parse_dynamodb_value imported from receipt_dynamo.entities.dynamodb_utils",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.job",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 10,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/job.py",
        "symbol": "unused-import",
        "message": "Unused to_dynamodb_value imported from receipt_dynamo.entities.dynamodb_utils",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.line",
        "obj": "",
        "line": 163,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/line.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.line",
        "obj": "Line",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 10,
        "path": "receipt_dynamo/entities/line.py",
        "symbol": "too-many-ancestors",
        "message": "Too many ancestors (8/7)",
        "message-id": "R0901"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.line",
        "obj": "item_to_line",
        "line": 208,
        "column": 4,
        "endLine": 212,
        "endColumn": 5,
        "path": "receipt_dynamo/entities/line.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (receipt_dynamo.entities.entity_factory.EntityFactory, receipt_dynamo.entities.entity_factory.create_geometry_extractors, receipt_dynamo.entities.entity_factory.create_image_receipt_pk_parser)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.job_dependency",
        "obj": "",
        "line": 50,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/job_dependency.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.job_dependency",
        "obj": "item_to_job_dependency",
        "line": 215,
        "column": 8,
        "endLine": 215,
        "endColumn": 12,
        "path": "receipt_dynamo/entities/job_dependency.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_validation_summary",
        "obj": "",
        "line": 51,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_validation_summary.py",
        "symbol": "line-too-long",
        "message": "Line too long (100/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_validation_summary",
        "obj": "",
        "line": 82,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_validation_summary.py",
        "symbol": "line-too-long",
        "message": "Line too long (83/79)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_word",
        "obj": "ReceiptWord",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 17,
        "path": "receipt_dynamo/entities/receipt_word.py",
        "symbol": "too-many-ancestors",
        "message": "Too many ancestors (9/7)",
        "message-id": "R0901"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_validation_result",
        "obj": "",
        "line": 67,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_validation_result.py",
        "symbol": "line-too-long",
        "message": "Line too long (88/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_validation_result",
        "obj": "",
        "line": 70,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_validation_result.py",
        "symbol": "line-too-long",
        "message": "Line too long (84/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_letter",
        "obj": "",
        "line": 104,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (86/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_letter",
        "obj": "",
        "line": 106,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_letter.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_letter",
        "obj": "",
        "line": 222,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_letter",
        "obj": "",
        "line": 274,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_letter",
        "obj": "ReceiptLetter",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 19,
        "path": "receipt_dynamo/entities/receipt_letter.py",
        "symbol": "too-many-ancestors",
        "message": "Too many ancestors (8/7)",
        "message-id": "R0901"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_letter",
        "obj": "item_to_receipt_letter",
        "line": 293,
        "column": 4,
        "endLine": 297,
        "endColumn": 5,
        "path": "receipt_dynamo/entities/receipt_letter.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (entity_factory.EntityFactory, entity_factory.create_geometry_extractors, entity_factory.create_image_receipt_pk_parser)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.receipt_letter",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 17,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/receipt_letter.py",
        "symbol": "unused-import",
        "message": "Unused assert_valid_uuid imported from receipt_dynamo.entities.util",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.label_hygiene_result",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/label_hygiene_result.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.letter",
        "obj": "",
        "line": 222,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.letter",
        "obj": "",
        "line": 257,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/letter.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.letter",
        "obj": "",
        "line": 259,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/letter.py",
        "symbol": "line-too-long",
        "message": "Line too long (94/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.letter",
        "obj": "item_to_letter",
        "line": 233,
        "column": 4,
        "endLine": 237,
        "endColumn": 5,
        "path": "receipt_dynamo/entities/letter.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (receipt_dynamo.entities.entity_factory.EntityFactory, receipt_dynamo.entities.entity_factory.create_geometry_extractors, receipt_dynamo.entities.entity_factory.create_image_receipt_pk_parser)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_line_item_analysis",
        "obj": "ReceiptLineItemAnalysis.__post_init__",
        "line": 63,
        "column": 4,
        "endLine": 63,
        "endColumn": 21,
        "path": "receipt_dynamo/entities/receipt_line_item_analysis.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (51/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_line_item_analysis",
        "obj": "ReceiptLineItemAnalysis.to_item",
        "line": 198,
        "column": 4,
        "endLine": 198,
        "endColumn": 15,
        "path": "receipt_dynamo/entities/receipt_line_item_analysis.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (51/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_line",
        "obj": "",
        "line": 184,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/receipt_line.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_line",
        "obj": "ReceiptLine",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 17,
        "path": "receipt_dynamo/entities/receipt_line.py",
        "symbol": "too-many-ancestors",
        "message": "Too many ancestors (9/7)",
        "message-id": "R0901"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.receipt_line",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 24,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/receipt_line.py",
        "symbol": "unused-import",
        "message": "Unused assert_valid_uuid imported from receipt_dynamo.entities.util",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.instance_job",
        "obj": "",
        "line": 66,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/instance_job.py",
        "symbol": "line-too-long",
        "message": "Line too long (89/79)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.instance_job",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 10,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/instance_job.py",
        "symbol": "unused-import",
        "message": "Unused parse_dynamodb_value imported from receipt_dynamo.entities.dynamodb_utils",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.instance_job",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 10,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/instance_job.py",
        "symbol": "unused-import",
        "message": "Unused to_dynamodb_value imported from receipt_dynamo.entities.dynamodb_utils",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.job_checkpoint",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 9,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/job_checkpoint.py",
        "symbol": "unused-import",
        "message": "Unused parse_dynamodb_value imported from receipt_dynamo.entities.dynamodb_utils",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.job_checkpoint",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 9,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/job_checkpoint.py",
        "symbol": "unused-import",
        "message": "Unused to_dynamodb_value imported from receipt_dynamo.entities.dynamodb_utils",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.rwl_queue",
        "obj": "",
        "line": 58,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/rwl_queue.py",
        "symbol": "line-too-long",
        "message": "Line too long (89/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.job_resource",
        "obj": "",
        "line": 103,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/job_resource.py",
        "symbol": "line-too-long",
        "message": "Line too long (89/79)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.job_resource",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 10,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/job_resource.py",
        "symbol": "unused-import",
        "message": "Unused parse_dynamodb_value imported from receipt_dynamo.entities.dynamodb_utils",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.job_resource",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 10,
        "endColumn": 1,
        "path": "receipt_dynamo/entities/job_resource.py",
        "symbol": "unused-import",
        "message": "Unused to_dynamodb_value imported from receipt_dynamo.entities.dynamodb_utils",
        "message-id": "W0611"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.receipt_metadata",
        "obj": "ReceiptMetadata._get_high_quality_matched_fields",
        "line": 210,
        "column": 20,
        "endLine": 216,
        "endColumn": 55,
        "path": "receipt_dynamo/entities/receipt_metadata.py",
        "symbol": "too-many-boolean-expressions",
        "message": "Too many boolean expressions in if statement (6/5)",
        "message-id": "R0916"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.receipt_metadata",
        "obj": "ReceiptMetadata._get_high_quality_matched_fields",
        "line": 184,
        "column": 20,
        "endLine": 184,
        "endColumn": 21,
        "path": "receipt_dynamo/entities/receipt_metadata.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'i'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.receipt_metadata",
        "obj": "ReceiptMetadata.gsi3_key",
        "line": 295,
        "column": 28,
        "endLine": 295,
        "endColumn": 50,
        "path": "receipt_dynamo/entities/receipt_metadata.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.receipt_metadata",
        "obj": "item_to_receipt_metadata",
        "line": 433,
        "column": 4,
        "endLine": 437,
        "endColumn": 5,
        "path": "receipt_dynamo/entities/receipt_metadata.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (receipt_dynamo.entities.entity_factory.EntityFactory, receipt_dynamo.entities.entity_factory.create_image_receipt_pk_parser, receipt_dynamo.entities.entity_factory.create_image_receipt_sk_parser)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.word",
        "obj": "",
        "line": 312,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/word.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.word",
        "obj": "Word",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 10,
        "path": "receipt_dynamo/entities/word.py",
        "symbol": "too-many-ancestors",
        "message": "Too many ancestors (8/7)",
        "message-id": "R0901"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.word",
        "obj": "item_to_word",
        "line": 393,
        "column": 4,
        "endLine": 397,
        "endColumn": 5,
        "path": "receipt_dynamo/entities/word.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (entity_factory.EntityFactory, entity_factory.create_geometry_extractors, entity_factory.create_image_receipt_pk_parser)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "",
        "line": 165,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "",
        "line": 169,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "",
        "line": 172,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "line-too-long",
        "message": "Line too long (84/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "",
        "line": 174,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "line-too-long",
        "message": "Line too long (86/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "",
        "line": 176,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "line-too-long",
        "message": "Line too long (84/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "",
        "line": 182,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "line-too-long",
        "message": "Line too long (80/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "",
        "line": 192,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "line-too-long",
        "message": "Line too long (82/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "",
        "line": 198,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "line-too-long",
        "message": "Line too long (81/79)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "",
        "line": 275,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "AIUsageMetric.from_dynamodb_item",
        "line": 238,
        "column": 8,
        "endLine": 238,
        "endColumn": 72,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (receipt_dynamo.entities.entity_factory.EntityFactory)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "AIUsageMetric.query_by_service_date",
        "line": 293,
        "column": 24,
        "endLine": 293,
        "endColumn": 74,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.ai_usage_metric",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 27,
        "path": "receipt_dynamo/entities/ai_usage_metric.py",
        "symbol": "unused-import",
        "message": "Unused Decimal imported from decimal",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "receipt_dynamo.entities.embedding_batch_result",
        "obj": "validate_pinecone_id_format",
        "line": 40,
        "column": 11,
        "endLine": 40,
        "endColumn": 20,
        "path": "receipt_dynamo/entities/embedding_batch_result.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.embedding_batch_result",
        "obj": "validate_pinecone_id_format",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 31,
        "path": "receipt_dynamo/entities/embedding_batch_result.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (7/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.ocr_job:[176:196]\n==receipt_dynamo.entities.ocr_routing_decision:[151:172]\n    }\n    if not required_keys.issubset(item.keys()):\n        missing_keys = required_keys - item.keys()\n        additional_keys = item.keys() - required_keys\n        raise ValueError(\n            f\"Invalid item format\\nmissing keys: {missing_keys}\"\n            f\"\\nadditional keys: {additional_keys}\"\n        )\n\n    try:\n        sk_parts = item[\"SK\"][\"S\"].split(\"#\")\n        image_id = item[\"PK\"][\"S\"].split(\"#\")[1]\n        job_id = sk_parts[1]\n        s3_bucket = item[\"s3_bucket\"][\"S\"]\n        s3_key = item[\"s3_key\"][\"S\"]\n        created_at = datetime.fromisoformat(item[\"created_at\"][\"S\"])\n        updated_at = (\n            datetime.fromisoformat(item[\"updated_at\"][\"S\"])\n            if \"updated_at\" in item and \"S\" in item[\"updated_at\"]\n            else None\n        )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_checkpoint:[224:245]\n==receipt_dynamo.data._job_resource:[215:236]\n        if job_id is None:\n            raise EntityValidationError(\"job_id cannot be None\")\n        assert_valid_uuid(job_id)\n\n        if limit is not None and not isinstance(limit, int):\n            raise EntityValidationError(\"Limit must be an integer\")\n        if limit is not None and limit <= 0:\n            raise EntityValidationError(\"Limit must be greater than 0\")\n        if last_evaluated_key is not None:\n            if not isinstance(last_evaluated_key, dict):\n                raise EntityValidationError(\n                    \"LastEvaluatedKey must be a dictionary\"\n                )\n            validate_last_evaluated_key(last_evaluated_key)\n\n        return self._query_entities(\n            index_name=None,\n            key_condition_expression=\"PK = :pk AND begins_with(SK, :sk)\",\n            expression_attribute_names=None,\n            expression_attribute_values={\n                \":pk\": {\"S\": f\"JOB#{job_id}\"},",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._letter:[222:252]\n==receipt_dynamo.data._word:[204:234]\n        results = []\n\n        # Split keys into chunks of up to 25\n        for i in range(0, len(keys), CHUNK_SIZE):\n            chunk = keys[i : i + CHUNK_SIZE]\n\n            # Prepare parameters for BatchGetItem\n            request: BatchGetItemInputTypeDef = {\n                \"RequestItems\": {self.table_name: {\"Keys\": chunk}}\n            }\n\n            # Perform BatchGet\n            response = self._client.batch_get_item(**request)\n\n            # Combine all found items\n            batch_items = response[\"Responses\"].get(self.table_name, [])\n            results.extend(batch_items)\n\n            # Retry unprocessed keys if any\n            unprocessed = response.get(\"UnprocessedKeys\", {})\n            while unprocessed.get(self.table_name, {}).get(\n                \"Keys\"\n            ):  # type: ignore[call-overload]\n                response = self._client.batch_get_item(\n                    RequestItems=unprocessed\n                )\n                batch_items = response[\"Responses\"].get(self.table_name, [])\n                results.extend(batch_items)\n                unprocessed = response.get(\"UnprocessedKeys\", {})\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.image:[193:209]\n==receipt_dynamo.entities.receipt:[237:253]\n            f\"sha256={_repr_str(self.sha256)}, \"\n            f\"cdn_s3_bucket={_repr_str(self.cdn_s3_bucket)}, \"\n            f\"cdn_s3_key={_repr_str(self.cdn_s3_key)}, \"\n            f\"cdn_webp_s3_key={_repr_str(self.cdn_webp_s3_key)}, \"\n            f\"cdn_avif_s3_key={_repr_str(self.cdn_avif_s3_key)}, \"\n            f\"cdn_thumbnail_s3_key={_repr_str(self.cdn_thumbnail_s3_key)}, \"\n            f\"cdn_thumbnail_webp_s3_key=\"\n            f\"{_repr_str(self.cdn_thumbnail_webp_s3_key)}, \"\n            f\"cdn_thumbnail_avif_s3_key=\"\n            f\"{_repr_str(self.cdn_thumbnail_avif_s3_key)}, \"\n            f\"cdn_small_s3_key={_repr_str(self.cdn_small_s3_key)}, \"\n            f\"cdn_small_webp_s3_key={_repr_str(self.cdn_small_webp_s3_key)}, \"\n            f\"cdn_small_avif_s3_key={_repr_str(self.cdn_small_avif_s3_key)}, \"\n            f\"cdn_medium_s3_key={_repr_str(self.cdn_medium_s3_key)}, \"\n            f\"cdn_medium_webp_s3_key=\"\n            f\"{_repr_str(self.cdn_medium_webp_s3_key)}, \"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._receipt_validation_category:[404:421]\n==receipt_dynamo.data._receipt_validation_result:[389:406]\n        except ValueError as e:\n            raise EntityValidationError(f\"Invalid image_id format: {e}\") from e\n\n        return self._query_entities(\n            index_name=None,\n            key_condition_expression=(\n                \"#pk = :pk AND begins_with(#sk, :sk_prefix)\"\n            ),\n            expression_attribute_names={\n                \"#pk\": \"PK\",\n                \"#sk\": \"SK\",\n            },\n            expression_attribute_values={\n                \":pk\": {\"S\": f\"IMAGE#{image_id}\"},\n                \":sk_prefix\": {\n                    \"S\": (\n                        f\"RECEIPT#{receipt_id:05d}#ANALYSIS#VALIDATION#\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.letter:[217:258]\n==receipt_dynamo.entities.word:[346:383]\n        )\n\n\n\n\ndef item_to_word(item: Dict[str, Any]) -> Word:\n    \"\"\"Converts a DynamoDB item to a Word object using EntityFactory.\n\n    Args:\n        item (dict): The DynamoDB item to convert.\n\n    Returns:\n        Word: The Word object represented by the DynamoDB item.\n\n    Raises:\n        ValueError: When the item is missing required keys or has malformed\n        fields.\n    \"\"\"\n\n    required_keys = {\n        \"PK\",\n        \"SK\",\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",\n    }\n\n    # Custom SK parser for LINE#{line_id:05d}#WORD#{word_id:05d} pattern\n    def parse_word_sk(sk: str) -> Dict[str, Any]:\n        \"\"\"Parse the SK to extract line_id and word_id.\"\"\"\n        parts = sk.split(\"#\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.line:[159:177]\n==receipt_dynamo.entities.word:[308:326]\n        )\n\n    def _get_geometry_hash_fields(self) -> tuple:\n        \"\"\"Override to include entity-specific ID fields in hash computation.\"\"\"\n        geometry_fields = (\n            self.text,\n            tuple(self.bounding_box.items()),\n            tuple(self.top_right.items()),\n            tuple(self.top_left.items()),\n            tuple(self.bottom_right.items()),\n            tuple(self.bottom_left.items()),\n            self.angle_degrees,\n            self.angle_radians,\n            self.confidence,\n        )\n        return geometry_fields + (\n            self.image_id,\n            self.line_id,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._receipt_validation_category:[301:345]\n==receipt_dynamo.data._receipt_validation_summary:[239:283]\n            limit=limit,\n            last_evaluated_key=last_evaluated_key,\n        )\n\n    @handle_dynamodb_errors(\"list_receipt_validation_summaries_by_status\")\n    def list_receipt_validation_summaries_by_status(\n        self,\n        status: str,\n        limit: Optional[int] = None,\n        last_evaluated_key: Optional[Dict] = None,\n    ) -> Tuple[List[ReceiptValidationSummary], Optional[Dict]]:\n        \"\"\"Returns ReceiptValidationSummaries with a specific status.\n\n        Args:\n            status (str): The status to filter by.\n            limit (Optional[int], optional): The maximum number of items to\n                return. Defaults to None.\n            last_evaluated_key (Optional[Dict], optional): The key to start\n                from for pagination. Defaults to None.\n\n        Returns:\n            tuple[list[ReceiptValidationSummary], dict | None]: A tuple\n                containing the list of ReceiptValidationSummaries and the\n                last evaluated key for pagination.\n\n        Raises:\n            ValueError: If the parameters are invalid.\n            Exception: If the ReceiptValidationSummaries cannot be retrieved\n                from DynamoDB.\n        \"\"\"\n        if not isinstance(status, str):\n            raise EntityValidationError(\n                f\"status must be a string, got {type(status).__name__}\"\n            )\n        if limit is not None and not isinstance(limit, int):\n            raise EntityValidationError(\"limit must be an integer or None\")\n        if last_evaluated_key is not None and not isinstance(\n            last_evaluated_key, dict\n        ):\n            raise EntityValidationError(\n                \"last_evaluated_key must be a dictionary or None\"\n            )\n\n        return self._query_entities(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.image:[49:66]\n==receipt_dynamo.entities.receipt:[67:86]\n    sha256: Optional[str] = None\n    cdn_s3_bucket: Optional[str] = None\n    cdn_s3_key: Optional[str] = None\n    cdn_webp_s3_key: Optional[str] = None\n    cdn_avif_s3_key: Optional[str] = None\n    # Thumbnail versions\n    cdn_thumbnail_s3_key: Optional[str] = None\n    cdn_thumbnail_webp_s3_key: Optional[str] = None\n    cdn_thumbnail_avif_s3_key: Optional[str] = None\n    # Small versions\n    cdn_small_s3_key: Optional[str] = None\n    cdn_small_webp_s3_key: Optional[str] = None\n    cdn_small_avif_s3_key: Optional[str] = None\n    # Medium versions\n    cdn_medium_s3_key: Optional[str] = None\n    cdn_medium_webp_s3_key: Optional[str] = None\n    cdn_medium_avif_s3_key: Optional[str] = None\n\n    # CDN field lists for CDNFieldsMixin",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.letter:[238:258]\n==receipt_dynamo.entities.receipt_letter:[257:275]\n    required_keys = {\n        \"PK\",\n        \"SK\",\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",\n    }\n\n    # Custom SK parser for RECEIPT#/LINE#/WORD#/LETTER# pattern\n    def parse_receipt_letter_sk(sk: str) -> Dict[str, Any]:\n        \"\"\"Parse the SK to extract receipt_id, line_id, word_id, and letter_id.\"\"\"\n        parts = sk.split(\"#\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.letter:[217:255]\n==receipt_dynamo.entities.receipt_word:[345:377]\n        )\n\n\ndef item_to_letter(item: Dict[str, Any]) -> Letter:\n    \"\"\"Convert a DynamoDB item to a Letter object using type-safe EntityFactory.\n\n    Args:\n        item: The DynamoDB item dictionary to convert.\n\n    Returns:\n        A Letter object with all fields properly extracted and validated.\n\n    Raises:\n        ValueError: If required fields are missing or have invalid format.\n    \"\"\"\n    from receipt_dynamo.entities.entity_factory import (\n        EntityFactory,\n        create_geometry_extractors,\n        create_image_receipt_pk_parser,\n    )\n\n    required_keys = {\n        \"PK\",\n        \"SK\",\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",\n    }\n\n    # Custom SK parser for LINE#...#WORD#...#LETTER#{letter_id:05d} pattern\n    def parse_letter_sk(sk: str) -> Dict[str, Any]:\n        \"\"\"Parse the SK to extract line_id, word_id, and letter_id.\"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.line:[190:231]\n==receipt_dynamo.entities.word:[344:383]\n            f\"{geometry_fields}\"\n            f\")\"\n        )\n\n\n\n\ndef item_to_word(item: Dict[str, Any]) -> Word:\n    \"\"\"Converts a DynamoDB item to a Word object using EntityFactory.\n\n    Args:\n        item (dict): The DynamoDB item to convert.\n\n    Returns:\n        Word: The Word object represented by the DynamoDB item.\n\n    Raises:\n        ValueError: When the item is missing required keys or has malformed\n        fields.\n    \"\"\"\n\n    required_keys = {\n        \"PK\",\n        \"SK\",\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",\n    }\n\n    # Custom SK parser for LINE#{line_id:05d}#WORD#{word_id:05d} pattern\n    def parse_word_sk(sk: str) -> Dict[str, Any]:\n        \"\"\"Parse the SK to extract line_id and word_id.\"\"\"\n        parts = sk.split(\"#\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_metric:[195:210]\n==receipt_dynamo.data._receipt_field:[370:385]\n        if limit is not None and not isinstance(limit, int):\n            raise EntityValidationError(\"Limit must be an integer\")\n        if limit is not None and limit <= 0:\n            raise EntityValidationError(\"Limit must be greater than 0\")\n        if last_evaluated_key is not None:\n            if not isinstance(last_evaluated_key, dict):\n                raise EntityValidationError(\n                    \"LastEvaluatedKey must be a dictionary\"\n                )\n            validate_last_evaluated_key(last_evaluated_key)\n\n        return self._query_entities(\n            index_name=\"GSI1\",\n            key_condition_expression=\"GSI1PK = :pk\",\n            expression_attribute_names=None,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.completion_batch_result:[96:120]\n==receipt_dynamo.entities.embedding_batch_result:[102:121]\n        }\n\n    @property\n    def gsi2_key(self) -> Dict[str, Any]:\n        return {\n            \"GSI2PK\": {\"S\": f\"BATCH#{self.batch_id}\"},\n            \"GSI2SK\": {\"S\": f\"STATUS#{self.status}\"},\n        }\n\n    @property\n    def gsi3_key(self) -> Dict[str, Any]:\n        return {\n            \"GSI3PK\": {\n                \"S\": f\"IMAGE#{self.image_id}#RECEIPT#{self.receipt_id}\"\n            },\n            \"GSI3SK\": {\"S\": f\"BATCH#{self.batch_id}#STATUS#{self.status}\"},\n        }\n\n    def to_item(self) -> Dict[str, Any]:\n        \"\"\"\n        Converts the completion batch result to an item for DynamoDB.\n        \"\"\"\n        return {\n            **self.key,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_letter:[228:275]\n==receipt_dynamo.entities.receipt_line:[189:233]\n        )\n\n    def __hash__(self) -> int:\n        \"\"\"\n        Generates a hash value for the ReceiptLetter object.\n\n        Returns:\n            int: The hash value for the ReceiptLetter object.\n        \"\"\"\n        return hash(self._get_geometry_hash_fields())\n\n\n\ndef item_to_receipt_letter(item: Dict[str, Any]) -> ReceiptLetter:\n    \"\"\"\n    Converts a DynamoDB item to a ReceiptLetter object.\n\n    Args:\n        item (dict): The DynamoDB item to convert.\n\n    Returns:\n        ReceiptLetter: The ReceiptLetter object represented by the DynamoDB\n        item.\n\n    Raises:\n        ValueError: When the item format is invalid or required keys are\n        missing.\n    \"\"\"\n\n    required_keys = {\n        \"PK\",\n        \"SK\",\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",\n    }\n\n    # Custom SK parser for RECEIPT#/LINE#/WORD#/LETTER# pattern\n    def parse_receipt_letter_sk(sk: str) -> Dict[str, Any]:\n        \"\"\"Parse the SK to extract receipt_id, line_id, word_id, and letter_id.\"\"\"\n        parts = sk.split(\"#\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.letter:[181:201]\n==receipt_dynamo.entities.receipt_letter:[164:186]\n            and self.line_id == other.line_id\n            and self.word_id == other.word_id\n            and self.letter_id == other.letter_id\n            and self.text == other.text\n            and self.bounding_box == other.bounding_box\n            and self.top_right == other.top_right\n            and self.top_left == other.top_left\n            and self.bottom_right == other.bottom_right\n            and self.bottom_left == other.bottom_left\n            and self.angle_degrees == other.angle_degrees\n            and self.angle_radians == other.angle_radians\n            and self.confidence == other.confidence\n        )\n\n    def __iter__(self) -> Generator[Tuple[str, Any], None, None]:\n        \"\"\"\n        Returns an iterator over the ReceiptLetter object's attributes.\n\n        Yields:\n            Tuple[str, any]: A tuple containing the attribute name and its\n            value.\n        \"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.letter:[49:65]\n==receipt_dynamo.entities.receipt_letter:[67:83]\n    image_id: str\n    line_id: int\n    word_id: int\n    letter_id: int\n    text: str\n    bounding_box: Dict[str, Any]\n    top_right: Dict[str, Any]\n    top_left: Dict[str, Any]\n    bottom_right: Dict[str, Any]\n    bottom_left: Dict[str, Any]\n    angle_degrees: float\n    angle_radians: float\n    confidence: float\n\n    def __post_init__(self) -> None:\n        \"\"\"Validate and normalize initialization arguments.\"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_word:[75:88]\n==receipt_dynamo.entities.word:[67:83]\n    image_id: str\n    line_id: int\n    word_id: int\n    text: str\n    bounding_box: Dict[str, Any]\n    top_right: Dict[str, Any]\n    top_left: Dict[str, Any]\n    bottom_right: Dict[str, Any]\n    bottom_left: Dict[str, Any]\n    angle_degrees: float\n    angle_radians: float\n    confidence: float\n    extracted_data: Optional[Dict[str, Any]] = None",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_line:[28:66]\n==receipt_dynamo.entities.receipt_word:[27:77]\n    GeometryHashMixin,\n    GeometryReprMixin,\n    WarpTransformMixin,\n    GeometryValidationUtilsMixin,\n    SerializationMixin,\n    GeometryMixin,\n    GeometrySerializationMixin,\n    GeometryValidationMixin,\n    DynamoDBEntity,\n):\n    \"\"\"Receipt line metadata stored in DynamoDB.\n\n    This class encapsulates receipt line information such as the receipt\n    identifier, image UUID, text, geometric properties, and rotation angles.\n    It includes detection confidence and supports generating DynamoDB keys\n    before converting the line to a DynamoDB item.\n\n    Attributes:\n        receipt_id (int): Identifier for the receipt.\n        image_id (str): UUID identifying the image to which the receipt line\n            belongs.\n        line_id (int): Identifier for the receipt line.\n        text (str): The text content of the receipt line.\n        bounding_box (dict): Bounding box with keys ``x``, ``y``, ``width`` and\n            ``height``.\n        top_right (dict): The top-right corner with keys ``x`` and ``y``.\n        top_left (dict): The top-left corner with keys ``x`` and ``y``.\n        bottom_right (dict): The bottom-right corner with keys ``x`` and ``y``.\n        bottom_left (dict): The bottom-left corner with keys ``x`` and ``y``.\n        angle_degrees (float): The angle of the receipt line in degrees.\n        angle_radians (float): The angle of the receipt line in radians.\n        confidence (float): Confidence level of the line between 0 and 1.\n        embedding_status (EmbeddingStatus): Embedding status for the line.\n    \"\"\"\n\n    receipt_id: int\n    image_id: str\n    line_id: int",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_letter:[257:274]\n==receipt_dynamo.entities.receipt_word:[362:377]\n    required_keys = {\n        \"PK\",\n        \"SK\",\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",\n    }\n\n    # Type-safe extractors for all fields",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._receipt_line:[110:125]\n==receipt_dynamo.data._receipt_word:[179:192]\n        if receipt_id is None or not isinstance(receipt_id, int):\n            raise EntityValidationError(\"receipt_id must be an integer\")\n        if receipt_id <= 0:\n            raise EntityValidationError(\n                \"receipt_id must be a positive integer\"\n            )\n        if image_id is None:\n            raise EntityValidationError(\"image_id cannot be None\")\n        assert_valid_uuid(image_id)\n        if line_id is None or not isinstance(line_id, int):\n            raise EntityValidationError(\"line_id must be an integer\")\n        if line_id <= 0:\n            raise EntityValidationError(\"line_id must be a positive integer\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_metric:[127:144]\n==receipt_dynamo.data._job_status:[115:130]\n        if job_id is None:\n            raise EntityValidationError(\"job_id cannot be None\")\n        assert_valid_uuid(job_id)\n\n        if limit is not None and not isinstance(limit, int):\n            raise EntityValidationError(\"Limit must be an integer\")\n        if limit is not None and limit <= 0:\n            raise EntityValidationError(\"Limit must be greater than 0\")\n        if last_evaluated_key is not None:\n            if not isinstance(last_evaluated_key, dict):\n                raise EntityValidationError(\n                    \"LastEvaluatedKey must be a dictionary\"\n                )\n            validate_last_evaluated_key(last_evaluated_key)\n\n        # Build the expression attribute values based on whether\n        # metric_name is provided",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_checkpoint:[352:366]\n==receipt_dynamo.data._receipt_field:[370:384]\n        if limit is not None and not isinstance(limit, int):\n            raise EntityValidationError(\"Limit must be an integer\")\n        if limit is not None and limit <= 0:\n            raise EntityValidationError(\"Limit must be greater than 0\")\n        if last_evaluated_key is not None:\n            if not isinstance(last_evaluated_key, dict):\n                raise EntityValidationError(\n                    \"LastEvaluatedKey must be a dictionary\"\n                )\n            validate_last_evaluated_key(last_evaluated_key)\n\n        return self._query_entities(\n            index_name=\"GSI1\",\n            key_condition_expression=\"GSI1PK = :pk\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._receipt_validation_category:[228:242]\n==receipt_dynamo.data._receipt_validation_result:[235:248]\n        if not isinstance(receipt_id, int):\n            raise EntityValidationError(\n                f\"receipt_id must be an integer, got \"\n                f\"{type(receipt_id).__name__}\"\n            )\n        if not isinstance(image_id, str):\n            raise EntityValidationError(\n                f\"image_id must be a string, got {type(image_id).__name__}\"\n            )\n        if not isinstance(field_name, str):\n            raise EntityValidationError(\n                f\"field_name must be a string, got {type(field_name).__name__}\"\n            )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.letter:[217:258]\n==receipt_dynamo.entities.line:[192:231]\n        )\n\n\ndef item_to_line(item: Dict[str, Any]) -> Line:\n    \"\"\"Convert a DynamoDB item to a Line object using type-safe EntityFactory.\n\n    Args:\n        item: The DynamoDB item dictionary to convert.\n\n    Returns:\n        A Line object with all fields properly extracted and validated.\n\n    Raises:\n        ValueError: If required fields are missing or have invalid format.\n    \"\"\"\n    from receipt_dynamo.entities.entity_factory import (\n        EntityFactory,\n        create_geometry_extractors,\n        create_image_receipt_pk_parser,\n    )\n\n    required_keys = {\n        \"PK\",\n        \"SK\",\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",\n    }\n\n    # Custom SK parser for LINE#{line_id:05d} pattern\n    def parse_line_sk(sk: str) -> Dict[str, Any]:\n        \"\"\"Parse the SK to extract line_id.\"\"\"\n        parts = sk.split(\"#\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.line:[192:230]\n==receipt_dynamo.entities.receipt_word:[345:377]\n        )\n\n\ndef item_to_receipt_word(item: Dict[str, Any]) -> ReceiptWord:\n    \"\"\"\n    Converts a DynamoDB item to a ReceiptWord object using EntityFactory.\n\n    Args:\n        item (dict): The DynamoDB item to convert.\n\n    Returns:\n        ReceiptWord: The ReceiptWord object represented by the DynamoDB item.\n\n    Raises:\n        ValueError: When the item format is invalid or required keys are\n            missing.\n    \"\"\"\n    required_keys = {\n        \"PK\",\n        \"SK\",\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",\n    }\n\n    # Type-safe extractors for all fields",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_validation_category:[64:84]\n==receipt_dynamo.entities.receipt_validation_result:[85:105]\n        if self.metadata is None:\n            self.metadata = {}\n\n    @property\n    def key(self) -> Dict[str, Dict[str, str]]:\n        \"\"\"Return the DynamoDB key for this item.\"\"\"\n        return {\n            \"PK\": {\"S\": f\"IMAGE#{self.image_id}\"},\n            \"SK\": {\n                \"S\": (\n                    f\"RECEIPT#{self.receipt_id:05d}#ANALYSIS#VALIDATION#\"\n                    f\"CATEGORY#{self.field_name}\"\n                )\n            },\n        }\n\n    @property\n    def gsi1_key(self) -> Dict[str, Dict[str, str]]:\n        \"\"\"Return the GSI1 key for this item.\"\"\"\n        return {",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.entity_mixins:[205:218]\n==receipt_dynamo.entities.receipt_validation_category:[185:198]\n        if \"NULL\" in dynamo_value:\n            return None\n        if \"S\" in dynamo_value:\n            return dynamo_value[\"S\"]\n        if \"N\" in dynamo_value:\n            # Try to convert to int if possible, otherwise float\n            try:\n                return int(dynamo_value[\"N\"])\n            except ValueError:\n                return float(dynamo_value[\"N\"])\n        if \"BOOL\" in dynamo_value:\n            return dynamo_value[\"BOOL\"]\n        if \"M\" in dynamo_value:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_checkpoint:[352:365]\n==receipt_dynamo.data._receipt_field:[433:446]\n        if limit is not None and not isinstance(limit, int):\n            raise EntityValidationError(\"Limit must be an integer\")\n        if limit is not None and limit <= 0:\n            raise EntityValidationError(\"Limit must be greater than 0\")\n        if last_evaluated_key is not None:\n            if not isinstance(last_evaluated_key, dict):\n                raise EntityValidationError(\n                    \"LastEvaluatedKey must be a dictionary\"\n                )\n            validate_last_evaluated_key(last_evaluated_key)\n\n        return self._query_entities(\n            index_name=\"GSI1\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.image:[75:90]\n==receipt_dynamo.entities.receipt:[93:107]\n        validate_positive_dimensions(self.width, self.height)\n\n        if isinstance(self.timestamp_added, datetime):\n            self.timestamp_added = self.timestamp_added.isoformat()\n        elif not isinstance(self.timestamp_added, str):\n            raise ValueError(\n                \"timestamp_added must be a datetime object or a string\"\n            )\n\n        if self.raw_s3_bucket and not isinstance(self.raw_s3_bucket, str):\n            raise ValueError(\"raw_s3_bucket must be a string\")\n\n        if self.raw_s3_key and not isinstance(self.raw_s3_key, str):\n            raise ValueError(\"raw_s3_key must be a string\")\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.letter:[238:258]\n==receipt_dynamo.entities.receipt_line:[215:233]\n    required_keys = {\n        \"PK\",\n        \"SK\",\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",\n    }\n\n    # Custom SK parser for RECEIPT#{receipt_id:05d}#LINE#{line_id:05d} pattern\n    def parse_receipt_line_sk(sk: str) -> Dict[str, Any]:\n        \"\"\"Parse the SK to extract receipt_id and line_id.\"\"\"\n        parts = sk.split(\"#\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_line:[215:232]\n==receipt_dynamo.entities.receipt_word:[362:377]\n    required_keys = {\n        \"PK\",\n        \"SK\",\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",\n    }\n\n    # Type-safe extractors for all fields",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_line:[155:166]\n==receipt_dynamo.entities.receipt_word:[240:251]\n            custom_fields=custom_fields,\n            exclude_fields={\n                \"text\",\n                \"bounding_box\",\n                \"top_right\",\n                \"top_left\",\n                \"bottom_right\",\n                \"bottom_left\",\n                \"angle_degrees\",\n                \"angle_radians\",\n                \"confidence\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.line:[21:62]\n==receipt_dynamo.entities.word:[25:69]\n    GeometryHashMixin,\n    GeometryReprMixin,\n    GeometryValidationUtilsMixin,\n    SerializationMixin,\n    GeometryMixin,\n    GeometrySerializationMixin,\n    GeometryValidationMixin,\n    DynamoDBEntity,\n):\n    \"\"\"\n    Represents a line and its associated metadata stored in a DynamoDB table.\n\n    This class encapsulates line-related information such as its unique\n    identifier, text content, geometric properties, rotation angles, and\n    detection confidence. It is designed to support operations such as\n    generating DynamoDB keys and applying geometric transformations including\n    translation, scaling, rotation, shear, and affine warping.\n\n    Attributes:\n        image_id (str): UUID identifying the image to which the line belongs.\n        line_id (int): Identifier for the line.\n        text (str): The text content of the line.\n        bounding_box (dict): The bounding box of the line with keys 'x', 'y',\n            'width', and 'height'.\n        top_right (dict): The top-right corner coordinates with keys 'x' and\n            'y'.\n        top_left (dict): The top-left corner coordinates with keys 'x' and 'y'.\n        bottom_right (dict): The bottom-right corner coordinates with keys\n            'x' and 'y'.\n        bottom_left (dict): The bottom-left corner coordinates with keys 'x'\n            and 'y'.\n        angle_degrees (float): The angle of the line in degrees.\n        angle_radians (float): The angle of the line in radians.\n        confidence (float): The confidence level of the line (between 0 and 1).\n        histogram (dict): A histogram representing character frequencies in\n            the text.\n        num_chars (int): The number of characters in the line.\n    \"\"\"\n\n    image_id: str\n    line_id: int",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.line:[60:74]\n==receipt_dynamo.entities.receipt_line:[64:75]\n    image_id: str\n    line_id: int\n    text: str\n    bounding_box: Dict[str, Any]\n    top_right: Dict[str, Any]\n    top_left: Dict[str, Any]\n    bottom_right: Dict[str, Any]\n    bottom_left: Dict[str, Any]\n    angle_degrees: float\n    angle_radians: float\n    confidence: float",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.line:[213:231]\n==receipt_dynamo.entities.receipt_letter:[257:275]\n    required_keys = {\n        \"PK\",\n        \"SK\",\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",\n    }\n\n    # Custom SK parser for LINE#{line_id:05d} pattern\n    def parse_line_sk(sk: str) -> Dict[str, Any]:\n        \"\"\"Parse the SK to extract line_id.\"\"\"\n        parts = sk.split(\"#\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.job:[77:89]\n==receipt_dynamo.entities.job_status:[46:59]\n        valid_statuses = [\n            \"pending\",\n            \"running\",\n            \"succeeded\",\n            \"failed\",\n            \"cancelled\",\n            \"interrupted\",\n        ]\n        if not isinstance(self.status, str) or self.status.lower() not in valid_statuses:\n            raise ValueError(f\"status must be one of {valid_statuses}\")\n        self.status = self.status.lower()\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_validation_category:[23:39]\n==receipt_dynamo.entities.receipt_validation_result:[27:43]\n    validation_timestamp: Optional[str] = None\n    metadata: Optional[Dict[str, Any]] = None\n\n    def __post_init__(self):\n        if not isinstance(self.receipt_id, int):\n            raise ValueError(\"receipt_id must be an integer\")\n        if self.receipt_id <= 0:\n            raise ValueError(\"receipt_id must be positive\")\n\n        assert_valid_uuid(self.image_id)\n\n        if not isinstance(self.field_name, str):\n            raise ValueError(\"field_name must be a string\")\n        if not self.field_name:\n            raise ValueError(\"field_name must not be empty\")\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data.base_operations.mixins:[178:205]\n==receipt_dynamo.data.base_operations.shared_utils:[186:199]\n        unprocessed_items = response.get(\"UnprocessedItems\", {})\n        if not unprocessed_items:\n            break\n\n        if attempt < max_retries:\n            time.sleep(backoff)\n            backoff *= 2  # Exponential backoff\n            request_items = unprocessed_items\n        else:\n            # Final attempt failed, log unprocessed items\n            raise RuntimeError(\n                f\"Failed to process all items after {max_retries} retries\"\n            )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._receipt_chatgpt_validation:[346:357]\n==receipt_dynamo.data._receipt_letter:[427:438]\n        results, _ = self._query_entities(\n            index_name=None,\n            key_condition_expression=(\n                \"PK = :pkVal AND begins_with(SK, :skPrefix)\"\n            ),\n            expression_attribute_names=None,\n            expression_attribute_values={\n                \":pkVal\": {\"S\": f\"IMAGE#{image_id}\"},\n                \":skPrefix\": {\n                    \"S\": (\n                        f\"RECEIPT#{receipt_id:05d}\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._completion_batch_result:[25:52]\n==receipt_dynamo.data._job:[19:38]\nif TYPE_CHECKING:\n    from receipt_dynamo.data.base_operations import (\n        QueryInputTypeDef,\n    )\n\n\ndef validate_last_evaluated_key(lek: Dict[str, Any]) -> None:\n    \"\"\"Validate that a LastEvaluatedKey has the required DynamoDB format.\n\n    Args:\n        lek: The LastEvaluatedKey dictionary to validate.\n\n    Raises:\n        ValueError: If the key format is invalid or missing required fields.\n    \"\"\"\n    required_keys = {\"PK\", \"SK\"}\n    if not required_keys.issubset(lek.keys()):\n        raise EntityValidationError(\n            f\"LastEvaluatedKey must contain keys: {required_keys}\"\n        )\n    for key in required_keys:\n        if not isinstance(lek[key], dict) or \"S\" not in lek[key]:\n            raise EntityValidationError(\n                f\"LastEvaluatedKey[{key}] must be a dict containing a key 'S'\"\n            )\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_resource:[22:39]\n==receipt_dynamo.data._job_status:[14:31]\nif TYPE_CHECKING:\n    from receipt_dynamo.data.base_operations import QueryInputTypeDef\n\n\ndef validate_last_evaluated_key(lek: Dict[str, Any]) -> None:\n    required_keys = {\"PK\", \"SK\"}\n    if not required_keys.issubset(lek.keys()):\n        raise EntityValidationError(\n            f\"LastEvaluatedKey must contain keys: {required_keys}\"\n        )\n    for key in required_keys:\n        if not isinstance(lek[key], dict) or \"S\" not in lek[key]:\n            raise EntityValidationError(\n                f\"LastEvaluatedKey[{key}] must be a dict containing a key 'S'\"\n            )\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_checkpoint:[228:240]\n==receipt_dynamo.data._job_metric:[195:207]\n        if limit is not None and not isinstance(limit, int):\n            raise EntityValidationError(\"Limit must be an integer\")\n        if limit is not None and limit <= 0:\n            raise EntityValidationError(\"Limit must be greater than 0\")\n        if last_evaluated_key is not None:\n            if not isinstance(last_evaluated_key, dict):\n                raise EntityValidationError(\n                    \"LastEvaluatedKey must be a dictionary\"\n                )\n            validate_last_evaluated_key(last_evaluated_key)\n\n        return self._query_entities(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_resource:[219:231]\n==receipt_dynamo.data._receipt_field:[433:445]\n        if limit is not None and not isinstance(limit, int):\n            raise EntityValidationError(\"Limit must be an integer\")\n        if limit is not None and limit <= 0:\n            raise EntityValidationError(\"Limit must be greater than 0\")\n        if last_evaluated_key is not None:\n            if not isinstance(last_evaluated_key, dict):\n                raise EntityValidationError(\n                    \"LastEvaluatedKey must be a dictionary\"\n                )\n            validate_last_evaluated_key(last_evaluated_key)\n\n        return self._query_entities(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_metric:[254:266]\n==receipt_dynamo.data._receipt_field:[370:382]\n        if limit is not None and not isinstance(limit, int):\n            raise EntityValidationError(\"Limit must be an integer\")\n        if limit is not None and limit <= 0:\n            raise EntityValidationError(\"Limit must be greater than 0\")\n        if last_evaluated_key is not None:\n            if not isinstance(last_evaluated_key, dict):\n                raise EntityValidationError(\n                    \"LastEvaluatedKey must be a dictionary\"\n                )\n            validate_last_evaluated_key(last_evaluated_key)\n\n        return self._query_entities(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._receipt_validation_category:[337:349]\n==receipt_dynamo.data._receipt_validation_result:[456:468]\n        if last_evaluated_key is not None and not isinstance(\n            last_evaluated_key, dict\n        ):\n            raise EntityValidationError(\n                \"last_evaluated_key must be a dictionary or None\"\n            )\n\n        return self._query_entities(\n            index_name=\"GSI1\",\n            key_condition_expression=\"#gsi1pk = :pk\",\n            expression_attribute_names={\"#gsi1pk\": \"GSI1PK\"},\n            expression_attribute_values={",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.letter:[207:217]\n==receipt_dynamo.entities.word:[313:323]\n            self.text,\n            tuple(self.bounding_box.items()),\n            tuple(self.top_right.items()),\n            tuple(self.top_left.items()),\n            tuple(self.bottom_right.items()),\n            tuple(self.bottom_left.items()),\n            self.angle_degrees,\n            self.angle_radians,\n            self.confidence,\n        )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.letter:[138:151]\n==receipt_dynamo.entities.receipt_letter:[190:208]\n        yield \"letter_id\", self.letter_id\n        yield \"text\", self.text\n        yield \"bounding_box\", self.bounding_box\n        yield \"top_right\", self.top_right\n        yield \"top_left\", self.top_left\n        yield \"bottom_right\", self.bottom_right\n        yield \"bottom_left\", self.bottom_left\n        yield \"angle_degrees\", self.angle_degrees\n        yield \"angle_radians\", self.angle_radians\n        yield \"confidence\", self.confidence\n\n    def to_dict(self) -> Dict[str, Any]:\n        \"\"\"Returns a dictionary representation of the Letter object.\"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_word:[242:252]\n==receipt_dynamo.entities.word:[152:162]\n                \"text\",\n                \"bounding_box\",\n                \"top_right\",\n                \"top_left\",\n                \"bottom_right\",\n                \"bottom_left\",\n                \"angle_degrees\",\n                \"angle_radians\",\n                \"confidence\",\n                \"extracted_data\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.letter:[53:67]\n==receipt_dynamo.entities.line:[62:76]\n    text: str\n    bounding_box: Dict[str, Any]\n    top_right: Dict[str, Any]\n    top_left: Dict[str, Any]\n    bottom_right: Dict[str, Any]\n    bottom_left: Dict[str, Any]\n    angle_degrees: float\n    angle_radians: float\n    confidence: float\n\n    def __post_init__(self) -> None:\n        \"\"\"Validate and normalize initialization arguments.\"\"\"\n        assert_valid_uuid(self.image_id)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.entity_mixins:[573:595]\n==receipt_dynamo.entities.line:[164:174]\n            self.text,\n            tuple(self.bounding_box.items()),\n            tuple(self.top_right.items()),\n            tuple(self.top_left.items()),\n            tuple(self.bottom_right.items()),\n            tuple(self.bottom_left.items()),\n            self.angle_degrees,\n            self.angle_radians,\n            self.confidence,\n        )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_checkpoint:[252:282]\n==receipt_dynamo.data._job_status:[51:75]\n        )\n\n    @handle_dynamodb_errors(\"get_best_checkpoint\")\n    def get_best_checkpoint(self, job_id: str) -> Optional[JobCheckpoint]:\n        \"\"\"\n        Retrieve the best checkpoint for a job from the database.\n\n        Parameters:\n            job_id (str):\n                The ID of the job to get the best checkpoint for.\n\n        Returns:\n            Optional[JobCheckpoint]:\n                The best checkpoint for the job, or None if no best\n                checkpoint exists.\n\n        Raises:\n            ValueError: If parameters are invalid.\n            Exception: If the underlying database query fails.\n        \"\"\"\n        if job_id is None:\n            raise EntityValidationError(\"job_id cannot be None\")\n        assert_valid_uuid(job_id)\n\n        results, _ = self._query_entities(\n            index_name=None,\n            key_condition_expression=\"PK = :pk AND begins_with(SK, :sk)\",\n            expression_attribute_names=None,\n            expression_attribute_values={\n                \":pk\": {\"S\": f\"JOB#{job_id}\"},",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_status:[119:130]\n==receipt_dynamo.data._receipt_field:[370:381]\n        if limit is not None and not isinstance(limit, int):\n            raise EntityValidationError(\"Limit must be an integer\")\n        if limit is not None and limit <= 0:\n            raise EntityValidationError(\"Limit must be greater than 0\")\n        if last_evaluated_key is not None:\n            if not isinstance(last_evaluated_key, dict):\n                raise EntityValidationError(\n                    \"LastEvaluatedKey must be a dictionary\"\n                )\n            validate_last_evaluated_key(last_evaluated_key)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._job_metric:[131:144]\n==receipt_dynamo.data._receipt_field:[317:329]\n        if limit is not None and not isinstance(limit, int):\n            raise EntityValidationError(\"Limit must be an integer\")\n        if limit is not None and limit <= 0:\n            raise EntityValidationError(\"Limit must be greater than 0\")\n        if last_evaluated_key is not None:\n            if not isinstance(last_evaluated_key, dict):\n                raise EntityValidationError(\n                    \"LastEvaluatedKey must be a dictionary\"\n                )\n            validate_last_evaluated_key(last_evaluated_key)\n\n        # Use the QueryByTypeMixin for standardized GSITYPE queries",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.data._letter:[205:221]\n==receipt_dynamo.data._word:[187:203]\n            )\n\n        return result\n\n    @handle_dynamodb_errors(\"get_letters\")\n    def get_letters(self, keys: List[Dict]) -> List[Letter]:\n        \"\"\"Get a list of letters using a list of keys\"\"\"\n        # Check the validity of the keys\n        for key in keys:\n            if not {\"PK\", \"SK\"}.issubset(key.keys()):\n                raise EntityValidationError(\"Keys must contain 'PK' and 'SK'\")\n            if not key[\"PK\"][\"S\"].startswith(\"IMAGE#\"):\n                raise EntityValidationError(\"PK must start with 'IMAGE#'\")\n            if not key[\"SK\"][\"S\"].startswith(\"LINE#\"):\n                raise EntityValidationError(\"SK must start with 'LINE#'\")\n            if not key[\"SK\"][\"S\"].split(\"#\")[-2] == \"LETTER\":",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.letter:[53:65]\n==receipt_dynamo.entities.word:[70:79]\n    text: str\n    bounding_box: Dict[str, Any]\n    top_right: Dict[str, Any]\n    top_left: Dict[str, Any]\n    bottom_right: Dict[str, Any]\n    bottom_left: Dict[str, Any]\n    angle_degrees: float\n    angle_radians: float\n    confidence: float\n\n    def __post_init__(self) -> None:\n        \"\"\"Validate and normalize initialization arguments.\"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_letter:[71:83]\n==receipt_dynamo.entities.receipt_line:[66:75]\n    text: str\n    bounding_box: Dict[str, Any]\n    top_right: Dict[str, Any]\n    top_left: Dict[str, Any]\n    bottom_right: Dict[str, Any]\n    bottom_left: Dict[str, Any]\n    angle_degrees: float\n    angle_radians: float\n    confidence: float\n\n    def __post_init__(self) -> None:\n        \"\"\"Validate and normalize initialization arguments.\"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_word:[365:374]\n==receipt_dynamo.entities.word:[152:161]\n                \"text\",\n                \"bounding_box\",\n                \"top_right\",\n                \"top_left\",\n                \"bottom_right\",\n                \"bottom_left\",\n                \"angle_degrees\",\n                \"angle_radians\",\n                \"confidence\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_letter:[83:94]\n==receipt_dynamo.entities.receipt_word:[93:104]\n        if not isinstance(self.receipt_id, int):\n            raise ValueError(\"receipt_id must be an integer\")\n        if self.receipt_id <= 0:\n            raise ValueError(\"receipt_id must be positive\")\n\n        if not isinstance(self.line_id, int):\n            raise ValueError(\"line_id must be an integer\")\n        if self.line_id < 0:\n            raise ValueError(\"line_id must be positive\")\n\n        if not isinstance(self.word_id, int):",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.line:[216:225]\n==receipt_dynamo.entities.receipt_line:[157:166]\n        \"text\",\n        \"bounding_box\",\n        \"top_right\",\n        \"top_left\",\n        \"bottom_right\",\n        \"bottom_left\",\n        \"angle_degrees\",\n        \"angle_radians\",\n        \"confidence\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.line:[138:147]\n==receipt_dynamo.entities.receipt_word:[242:251]\n                \"text\",\n                \"bounding_box\",\n                \"top_right\",\n                \"top_left\",\n                \"bottom_right\",\n                \"bottom_left\",\n                \"angle_degrees\",\n                \"angle_radians\",\n                \"confidence\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.line:[62:74]\n==receipt_dynamo.entities.receipt_word:[78:87]\n    text: str\n    bounding_box: Dict[str, Any]\n    top_right: Dict[str, Any]\n    top_left: Dict[str, Any]\n    bottom_right: Dict[str, Any]\n    bottom_left: Dict[str, Any]\n    angle_degrees: float\n    angle_radians: float\n    confidence: float",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "receipt_dynamo.entities.completion_batch_result",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "receipt_dynamo/entities/completion_batch_result.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==receipt_dynamo.entities.receipt_chatgpt_validation:[59:72]\n==receipt_dynamo.entities.receipt_validation_category:[62:75]\n        if self.metadata is not None and not isinstance(self.metadata, dict):\n            raise ValueError(\"metadata must be a dictionary\")\n        if self.metadata is None:\n            self.metadata = {}\n\n    @property\n    def key(self) -> Dict[str, Dict[str, str]]:\n        \"\"\"Return the DynamoDB key for this item.\"\"\"\n        return {\n            \"PK\": {\"S\": f\"IMAGE#{self.image_id}\"},\n            \"SK\": {\n                \"S\": (\n                    f\"RECEIPT#{self.receipt_id:05d}#ANALYSIS#VALIDATION#\"",
        "message-id": "R0801"
    }
]
