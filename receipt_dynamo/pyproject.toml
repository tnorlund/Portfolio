[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "receipt-dynamo"
version = "0.2.0"
authors = [
  { name="Tyler Norlund", email="tnorlund@icloud.com" },
]
description = "A Python interface for accessing DynamoDB for receipt data processing and analysis"
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "requests",
    "boto3",
]
keywords = ["dynamo", "dynamodb", "receipts", "aws", "database"]

[project.urls]
"Homepage" = "https://github.com/tnorlund/example"
"Bug Tracker" = "https://github.com/tnorlund/example/issues"

[project.optional-dependencies]
test = [
    "pytest>=8.3.0,<9.0.0",
    "pytest-mock>=3.14.0,<4.0.0",
    "pytest-cov>=6.1.0,<7.0.0",
    "pytest-xdist>=3.6.0,<4.0.0",
    "moto>=5.1.0,<6.0.0",
    "freezegun>=1.5.0,<2.0.0",
]
dev = [
    "pulumi>=3.0.0",
    "pulumi-aws>=6.0.0",
    "pulumi-command>=0.9.0",
    "black==25.1.0",
    "pylint>=3.0.0,<4.0.0",
    "mypy>=1.16.1",
    "isort==6.0.1",
    "boto3-stubs[dynamodb,s3]>=1.34.0",
]

[tool.hatch.build.targets.wheel]
packages = ["receipt_dynamo"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=receipt_dynamo"
markers = [
    "unit: mark test as a unit test",
    "integration: mark test as an integration test",
]

[tool.coverage.run]
source = ["receipt_dynamo"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "raise ImportError",
]

[tool.black]
line-length = 79
target-version = ["py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pylint.format]
max-line-length = 79

[tool.pylint.messages_control]
disable = [
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "too-many-instance-attributes",
    "too-many-branches",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
]

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "pk", "sk"]

[tool.pylint.design]
max-args = 10
max-locals = 20

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
