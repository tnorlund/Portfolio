[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "receipt_upload"
version = "0.1.0"
description = "A Python package for uploading receipts to DynamoDB"
readme = "README.md"
requires-python = ">=3.12"
license = {file = "LICENSE"}
authors = [
    {name = "Receipt Upload Contributors"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "Pillow>=11.2.1",
  "pillow-avif-plugin>=1.3.0",
  "boto3>=1.26.0",
]
keywords = ["dynamo", "dynamodb", "receipts", "aws", "database"]

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.13.0",
]
dev = [
    "black==25.1.0",
    "isort==6.0.1",
    "mypy>=1.16.1",
    "pylint>=3.0.0,<4.0.0",
]

[tool.hatch.build]
exclude = [
  "tests/",
  "test/",
  "**/*.md",
  "**/*.txt",
  "**/*.json",
  "**/*.yaml",
  "**/*.yml",
  "**/*.ini",
  "**/*.cfg",
  "**/*.sh",
  "**/conftest.py",
  "**/pytest.ini",
  "**/__pycache__/",
  "**/*.pyc",
  "**/*.pyo",
  "**/*.pyd",
  ".coverage",
  ".pytest_cache/",
  "test_*.py",
  "OCRSwift.swift",  # Swift files not needed in Python layer
]

[tool.hatch.build.targets.wheel]
packages = ["receipt_upload"]

[tool.black]
line-length = 79
target-version = ["py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
ignore_missing_imports = true
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "test",
]
python_files = ["test_*.py"]
markers = [
    "unit: mark test as unit test",
    "integration: mark test as integration test",
    "end_to_end: mark test as end-to-end test",
]

[tool.pylint.format]
max-line-length = 79

[tool.pylint.messages_control]
disable = [
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "too-many-instance-attributes",
    "too-many-branches",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
]

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "pk", "sk", "A", "B", "C", "D", "E", "F", "G", "H", "M", "x", "y", "x1", "y1", "x2", "y2"]

[tool.pylint.design]
max-args = 10
max-locals = 20
